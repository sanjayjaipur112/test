<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Netizine.OpenAI</name>
    </assembly>
    <members>
        <member name="T:OpenAI.OpenAIEntity">
            <summary>
            OpenAI Entity.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIEntity.RawJObject">
            <summary>
            Gets the raw <see cref="T:Newtonsoft.Json.Linq.JObject">JObject</see> exposed by the Newtonsoft.Json library.
            This can be used to access properties that are not directly exposed by OpenAI's .NET
            library.
            </summary>
            <remarks>
            You should always prefer using the standard property accessors whenever possible. This
            accessor is not considered fully stable and might change or be removed in future
            versions.
            </remarks>
            <returns>The raw <see cref="T:Newtonsoft.Json.Linq.JObject">JObject</see>.</returns>
        </member>
        <member name="P:OpenAI.OpenAIEntity.OpenAIResponse">
            <summary>Gets or sets the open ai response.</summary>
            <value>The OpenAI response.</value>
        </member>
        <member name="M:OpenAI.OpenAIEntity.FromJson(System.String)">
            <summary>
            Deserializes the JSON to a OpenAI object type. The type is automatically deduced from
             the <c>object</c> key in the JSON string.
            </summary>
            <param name="value">The object to deserialize.</param>
            <returns>The deserialized OpenAI object from the JSON string.</returns>
        </member>
        <member name="M:OpenAI.OpenAIEntity.FromJson``1(System.String)">
            <summary>Deserializes the JSON to the specified OpenAI object type.</summary>
            <typeparam name="T">The type of the OpenAI object to deserialize to.</typeparam>
            <param name="value">The object to deserialize.</param>
            <returns>The deserialized OpenAI object from the JSON string.</returns>
        </member>
        <member name="M:OpenAI.OpenAIEntity.ToString">
            <summary>Reports a OpenAI object as a string.</summary>
            <returns>
            A string representing the OpenAI object, including its JSON serialization.
            </returns>
            <seealso cref="M:OpenAI.OpenAIEntity.ToJson"/>
        </member>
        <member name="M:OpenAI.OpenAIEntity.ToJson">
            <summary>Serializes the OpenAI object as a JSON string.</summary>
            <returns>An indented JSON string representation of the object.</returns>
        </member>
        <member name="T:OpenAI.OpenAIEntity`1">
            <summary>
              OpenAI Entity.
            </summary>
            <typeparam name="T">T.</typeparam>
        </member>
        <member name="M:OpenAI.OpenAIEntity`1.FromJson(System.String)">
            <summary>Deserializes the JSON to a OpenAI object type.</summary>
            <param name="value">The object to deserialize.</param>
            <returns>The deserialized OpenAI object from the JSON string.</returns>
        </member>
        <member name="T:OpenAI.Categories">
            <summary>
              The OpenAI moderation categories.
            </summary>
        </member>
        <member name="P:OpenAI.Categories.Hate">
            <summary>Gets or sets a value indicating whether this <see cref="T:OpenAI.Categories" /> is hate.</summary>
            <value>
              <c>true</c> if hate; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:OpenAI.Categories.HateThreatening">
            <summary>Gets or sets a value indicating whether the content contains hate or threatening content.</summary>
            <value>
              <c>true</c> if the content contains hate or threatening content; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:OpenAI.Categories.SelfHarm">
            <summary>Gets or sets a value indicating whether the content contains self harm content.</summary>
            <value>
              <c>true</c> if the content contains self harm; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:OpenAI.Categories.Sexual">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:OpenAI.Categories"/> is sexual.
            </summary>
            <value>
              <c>true</c> if sexual; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:OpenAI.Categories.SexualMinors">
            <summary>
            Gets or sets a value indicating whether this content contains sexual content involving minors.
            </summary>
            <value>
              <c>true</c> if the content contains sexual minors; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:OpenAI.Categories.Violence">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:OpenAI.Categories"/> is violence.
            </summary>
            <value>
              <c>true</c> if violence; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:OpenAI.Categories.ViolenceGraphic">
            <summary>
            Gets or sets a value indicating whether this content contains violence or graphic content.
            </summary>
            <value>
              <c>true</c> if contents contains violence or graphic content; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:OpenAI.CategoryScores">
            <summary>
             The OpenAI moderation category scores.
            </summary>
        </member>
        <member name="P:OpenAI.CategoryScores.Hate">
            <summary>
            Gets the hate content score.
            </summary>
        </member>
        <member name="P:OpenAI.CategoryScores.HateThreatening">
            <summary>
            Gets the hate threatining content score.
            </summary>
        </member>
        <member name="P:OpenAI.CategoryScores.SelfHarm">
            <summary>
            Gets the self harm content score.
            </summary>
        </member>
        <member name="P:OpenAI.CategoryScores.Sexual">
            <summary>
            Gets the sexual content score.
            </summary>
        </member>
        <member name="P:OpenAI.CategoryScores.SexualMinors">
            <summary>
            Gets the sexual content involving minors score.
            </summary>
        </member>
        <member name="P:OpenAI.CategoryScores.Violence">
            <summary>
            Gets the violence content score.
            </summary>
        </member>
        <member name="P:OpenAI.CategoryScores.ViolenceGraphic">
            <summary>
            Gets the violence or graphic content score.
            </summary>
        </member>
        <member name="T:OpenAI.ChatCompletionMessage">
            <summary>
            The messages to generate chat completions for, in the chat format.
            </summary>
        </member>
        <member name="P:OpenAI.ChatCompletionMessage.Role">
            <summary>
            The role (either “System”, “User”, or “Assistant”).
            </summary>
        </member>
        <member name="P:OpenAI.ChatCompletionMessage.Content">
            <summary>
            The content of the message.
            </summary>
        </member>
        <member name="T:OpenAI.ChatRoles">
            <summary>
            OpenAI Chat Roles.
            </summary>
        </member>
        <member name="F:OpenAI.ChatRoles.User">
            <summary>
            User
            </summary>
        </member>
        <member name="F:OpenAI.ChatRoles.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:OpenAI.ChatRoles.Assistant">
            <summary>
            Assistant
            </summary>
        </member>
        <member name="T:OpenAI.Choice">
            <summary>
             The OpenAI choice.
            </summary>
        </member>
        <member name="P:OpenAI.Choice.Text">
            <summary>
            Gets or sets the text.
            </summary>
        </member>
        <member name="P:OpenAI.Choice.Index">
            <summary>
            Gets or sets the index.
            </summary>
        </member>
        <member name="P:OpenAI.Choice.LogProbs">
            <summary>
            Gets or sets the log probs.
            </summary>
        </member>
        <member name="P:OpenAI.Choice.FinishReason">
            <summary>
            Gets or sets the finish reason.
            </summary>
        </member>
        <member name="T:OpenAI.ChatCompletion">
            <summary>
            The chat completion model will return one or more predicted chat completions, and can also return the probabilities of alternative tokens at each position.
            </summary>
        </member>
        <member name="P:OpenAI.ChatCompletion.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.ChatCompletion.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.ChatCompletion.Created">
            <summary>
            Gets or sets the created date and time.
            </summary>
        </member>
        <member name="P:OpenAI.ChatCompletion.Model">
            <summary>
            Gets or sets the model.
            </summary>
        </member>
        <member name="P:OpenAI.ChatCompletion.Choices">
            <summary>
            Gets or sets the choices.
            </summary>
        </member>
        <member name="P:OpenAI.ChatCompletion.Usage">
            <summary>
            Gets or sets the usage.
            </summary>
        </member>
        <member name="T:OpenAI.Completion">
            <summary>
            The completion model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.
            </summary>
        </member>
        <member name="P:OpenAI.Completion.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.Completion.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.Completion.Created">
            <summary>
            Gets or sets the created date and time.
            </summary>
        </member>
        <member name="P:OpenAI.Completion.Model">
            <summary>
            Gets or sets the model.
            </summary>
        </member>
        <member name="P:OpenAI.Completion.Choices">
            <summary>
            Gets or sets the choices.
            </summary>
        </member>
        <member name="P:OpenAI.Completion.Usage">
            <summary>
            Gets or sets the usage.
            </summary>
        </member>
        <member name="T:OpenAI.Edit">
            <summary>
            Given a prompt and an instruction, the model will return an edited version of the prompt.
            </summary>
        </member>
        <member name="P:OpenAI.Edit.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.Edit.Created">
            <summary>
            Gets or sets the created date.
            </summary>
        </member>
        <member name="P:OpenAI.Edit.Choices">
            <summary>
            Gets or sets the choices.
            </summary>
        </member>
        <member name="P:OpenAI.Edit.Usage">
            <summary>
            Gets or sets the usage.
            </summary>
        </member>
        <member name="T:OpenAI.EmbeddingData">
            <summary>
            The embedding data.
            </summary>
        </member>
        <member name="P:OpenAI.EmbeddingData.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.EmbeddingData.Index">
            <summary>
            Gets or sets the index.
            </summary>
        </member>
        <member name="P:OpenAI.EmbeddingData.Embedding">
            <summary>
            Gets or sets the embedding values.
            </summary>
        </member>
        <member name="T:OpenAI.Embedding">
            <summary>
            A vector representation of a given input that can be easily consumed by machine learning models and algorithms.
            </summary>
        </member>
        <member name="P:OpenAI.Embedding.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.Embedding.Data">
            <summary>
            Gets or sets the data.
            </summary>
        </member>
        <member name="P:OpenAI.Embedding.Model">
            <summary>
            Gets or sets the model.
            </summary>
        </member>
        <member name="P:OpenAI.Embedding.Usage">
            <summary>
            Gets or sets the usage.
            </summary>
        </member>
        <member name="T:OpenAI.Engine">
            <summary>
            Describes and provide access to the various engines available in the OpenAI API.
            </summary>
        </member>
        <member name="P:OpenAI.Engine.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.Engine.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.Engine.Owner">
            <summary>
            The owner of the engine.
            </summary>
        </member>
        <member name="P:OpenAI.Engine.Ready">
            <summary>
            Has the value <c>true</c> if the engine is ready, otherwise <c>false</c>.
            </summary>
        </member>
        <member name="T:OpenAI.Event">
            <summary>
            The events.
            </summary>
        </member>
        <member name="P:OpenAI.Event.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.Event.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:OpenAI.Event.Level">
            <summary>
            Gets or sets the level.
            </summary>
        </member>
        <member name="P:OpenAI.Event.Message">
            <summary>
            Gets or sets the message.
            </summary>
        </member>
        <member name="T:OpenAI.File">
            <summary>
            Information about a specific file.
            </summary>
        </member>
        <member name="P:OpenAI.File.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.File.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.File.Bytes">
            <summary>
            Gets or sets the bytes.
            </summary>
        </member>
        <member name="P:OpenAI.File.Created">
            <summary>
            Gets or sets the created date.
            </summary>
        </member>
        <member name="P:OpenAI.File.Filename">
            <summary>
            Gets or sets the filename.
            </summary>
        </member>
        <member name="P:OpenAI.File.Purpose">
            <summary>
            Gets or sets the purpose.
            </summary>
        </member>
        <member name="T:OpenAI.FileContent">
            <summary>
            The file content.
            </summary>
        </member>
        <member name="P:OpenAI.FileContent.Content">
            <summary>
            The file content.
            </summary>
        </member>
        <member name="T:OpenAI.FineTune">
            <summary>
            Fine-tuning jobs to tailor a model to your specific training data.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.Model">
            <summary>
            Gets or sets the model.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.CreatedAt">
            <summary>
            Gets or sets the created at date.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.Events">
            <summary>
            Gets or sets the events.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.FineTunedModel">
            <summary>
            Gets or sets the fine tuned model.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.Hyperparams">
            <summary>
            Gets or sets the hyperparams.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.OrganizationId">
            <summary>
            Gets or sets the organization identifier.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.ResultFiles">
            <summary>
            Gets or sets the result files.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.Status">
            <summary>
            Gets or sets the status.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.ValidationFiles">
            <summary>
            Gets or sets the validation files.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.TrainingFiles">
            <summary>
            Gets or sets the training files.
            </summary>
        </member>
        <member name="P:OpenAI.FineTune.UpdatedAt">
            <summary>
            Gets or sets the updated at date.
            </summary>
        </member>
        <member name="T:OpenAI.FineTuneEvents">
            <summary>
            The OpenAI fine tune events.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneEvents.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneEvents.Data">
            <summary>
            Gets or sets the data.
            </summary>
        </member>
        <member name="T:OpenAI.Hyperparams">
            <summary>
            The OpenAI hyperparams.
            </summary>
        </member>
        <member name="P:OpenAI.Hyperparams.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.Hyperparams.BatchSize">
            <summary>
            Gets or sets the size of the batch.
            </summary>
        </member>
        <member name="P:OpenAI.Hyperparams.NEpochs">
            <summary>
            Gets or sets the n epochs.
            </summary>
        </member>
        <member name="P:OpenAI.Hyperparams.PromptLossWeight">
            <summary>
            Gets or sets the prompt loss weight.
            </summary>
        </member>
        <member name="T:OpenAI.ImageData">
            <summary>
            The OpenAI image data.
            </summary>
        </member>
        <member name="P:OpenAI.ImageData.Url">
            <summary>
            Gets or sets the URL.
            </summary>
        </member>
        <member name="P:OpenAI.ImageData.B64Json">
            <summary>
            Gets or sets the B64 json.
            </summary>
        </member>
        <member name="T:OpenAI.Image">
            <summary>
            The OpenAI image.
            </summary>
        </member>
        <member name="P:OpenAI.Image.Created">
            <summary>
            Gets or sets the created date and time.
            </summary>
        </member>
        <member name="P:OpenAI.Image.Data">
            <summary>
            Gets or sets the data.
            </summary>
        </member>
        <member name="T:OpenAI.IHasId">
            <summary>
            Interface that identifies entities returned by OpenAI that have an `id` attribute.
            </summary>
        </member>
        <member name="P:OpenAI.IHasId.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="T:OpenAI.IHasObject">
            <summary>
            Interface that identifies entities returned by OpenAI that have an `object` attribute.
            </summary>
        </member>
        <member name="P:OpenAI.IHasObject.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="T:OpenAI.IOpenAIEntity">
            <summary>
            Interface that identifies all entities returned by OpenAI.
            </summary>
        </member>
        <member name="P:OpenAI.IOpenAIEntity.OpenAIResponse">
            <summary>Gets or sets the open ai response.</summary>
            <value>The OpenAI response.</value>
        </member>
        <member name="T:OpenAI.Model">
            <summary>
            List and describe the various models available in the API.
            You can refer to the Models documentation to understand what models are available and the differences between them.
            </summary>
        </member>
        <member name="P:OpenAI.Model.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.Model.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.Model.Created">
            <summary>
            Gets or sets the created date.
            </summary>
        </member>
        <member name="P:OpenAI.Model.OwnedBy">
            <summary>
            Gets or sets who the model is owned by.
            </summary>
        </member>
        <member name="P:OpenAI.Model.Permissions">
            <summary>
            Gets or sets the permissions.
            </summary>
        </member>
        <member name="P:OpenAI.Model.Root">
            <summary>
            Gets or sets the root.
            </summary>
        </member>
        <member name="P:OpenAI.Model.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
        </member>
        <member name="P:OpenAI.Model.Deleted">
            <summary>
            Gets or sets if the model is deleted.
            </summary>
        </member>
        <member name="T:OpenAI.ModerationResult">
            <summary>
            The OpenAI moderation result.
            </summary>
        </member>
        <member name="P:OpenAI.ModerationResult.Categories">
            <summary>
            Gets or sets the categories.
            </summary>
        </member>
        <member name="P:OpenAI.ModerationResult.CategoryScores">
            <summary>
            Gets or sets the category scores.
            </summary>
        </member>
        <member name="P:OpenAI.ModerationResult.Flagged">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:OpenAI.ModerationResult"/> is flagged.
            </summary>
            <value>
              <c>true</c> if flagged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:OpenAI.Moderation">
            <summary>
            Given a input text, outputs if the model classifies it as violating OpenAI's content policy.
            </summary>
        </member>
        <member name="P:OpenAI.Moderation.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.Moderation.Model">
            <summary>
            Gets or sets the model.
            </summary>
        </member>
        <member name="P:OpenAI.Moderation.Results">
            <summary>
            Gets or sets the results.
            </summary>
        </member>
        <member name="T:OpenAI.OpenAIError">
            <summary>
            The OpenAI error.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIError.Message">
            <summary>The OpenAI error message in a human-readable message providing more details about the error.</summary>
        </member>
        <member name="P:OpenAI.OpenAIError.Type">
            <summary>
            The type of error returned such as invalid_request_error.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIError.Param">
            <summary>
            If the error is parameter-specific, the parameter related to the error. For example,
            you can use this to display a message near the correct form field.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIError.Code">
            <summary>
            The OpenAI error code.
            </summary>
        </member>
        <member name="T:OpenAI.OpenAIList`1">
            <summary>
            The OpenAI list.
            </summary>
            <typeparam name="T">The type parameter.</typeparam>
        </member>
        <member name="P:OpenAI.OpenAIList`1.Object">
            <summary>
            A string describing the object type returned.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIList`1.Data">
            <summary>
            A list containing the actual response elements, paginated by any request parameters.
            </summary>
        </member>
        <member name="M:OpenAI.OpenAIList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:OpenAI.OpenAIList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:OpenAI.OpenAIList`1.Reverse">
            <summary>
            Reverse the order of the items in Data to support backward iteration.
            </summary>
        </member>
        <member name="T:OpenAI.Permission">
            <summary>
            The OpenAI permission.
            </summary>
        </member>
        <member name="P:OpenAI.Permission.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.Permission.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.Permission.Created">
            <summary>
            Gets or sets the created date and time.
            </summary>
        </member>
        <member name="P:OpenAI.Permission.AllowCreateEngine">
            <summary>
            Gets or sets a value indicating whether to allow creating a engine.
            </summary>
            <value>
              <c>true</c> if a user is allowed to create a engine; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:OpenAI.Permission.AllowSampling">
            <summary>
            Gets or sets a value indicating whether to allow sampling.
            </summary>
            <value>
              <c>true</c> if allowing sampling; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:OpenAI.Permission.AllowLogprobs">
            <summary>
            Gets or sets a value indicating whether to allow logprobs.
            </summary>
            <value>
              <c>true</c> if allowing logprobs; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:OpenAI.Permission.AllowSearchIndices">
            <summary>
            Gets or sets a value indicating whether to allow search indices.
            </summary>
            <value>
              <c>true</c> if allowing search indices; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:OpenAI.Permission.AllowView">
            <summary>
            Gets or sets a value indicating whether to allow view.
            </summary>
            <value>
              <c>true</c> if allowing view; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:OpenAI.Permission.AllowFineTuning">
            <summary>
            Gets or sets a value indicating whether to allow fine tuning.
            </summary>
            <value>
              <c>true</c> if allowing fine tuning; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:OpenAI.Permission.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
        </member>
        <member name="P:OpenAI.Permission.Group">
            <summary>
            Gets or sets the group.
            </summary>
        </member>
        <member name="P:OpenAI.Permission.IsBlocking">
            <summary>
            Gets or sets a value indicating whether this instance is blocking.
            </summary>
            <value>
              <c>true</c> if this instance is blocking; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:OpenAI.ResultFiles">
            <summary>
            The OpenAI result files.
            </summary>
        </member>
        <member name="P:OpenAI.ResultFiles.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.ResultFiles.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.ResultFiles.Bytes">
            <summary>
            Gets or sets the bytes.
            </summary>
        </member>
        <member name="P:OpenAI.ResultFiles.CreatedAt">
            <summary>
            Gets or sets the created at date and time.
            </summary>
        </member>
        <member name="P:OpenAI.ResultFiles.Filename">
            <summary>
            Gets or sets the filename.
            </summary>
        </member>
        <member name="P:OpenAI.ResultFiles.Purpose">
            <summary>
            Gets or sets the purpose.
            </summary>
        </member>
        <member name="T:OpenAI.TrainingFiles">
            <summary>
            The OpenAI training files.
            </summary>
        </member>
        <member name="P:OpenAI.TrainingFiles.Id">
            <summary>
            Unique identifier for the object.
            </summary>
        </member>
        <member name="P:OpenAI.TrainingFiles.Object">
            <summary>
            String representing the object's type. Objects of the same type share the same value.
            </summary>
        </member>
        <member name="P:OpenAI.TrainingFiles.Bytes">
            <summary>
            Gets or sets the bytes.
            </summary>
        </member>
        <member name="P:OpenAI.TrainingFiles.CreatedAt">
            <summary>
            Gets or sets the created at date and time.
            </summary>
        </member>
        <member name="P:OpenAI.TrainingFiles.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
        </member>
        <member name="P:OpenAI.TrainingFiles.Purpose">
            <summary>
            Gets or sets the purpose.
            </summary>
        </member>
        <member name="T:OpenAI.Usage">
            <summary>
            The OpenAI usage.
            </summary>
        </member>
        <member name="P:OpenAI.Usage.PromptTokens">
            <summary>
            Gets or sets the prompt tokens.
            </summary>
        </member>
        <member name="P:OpenAI.Usage.CompletionTokens">
            <summary>
            Gets or sets the completion tokens.
            </summary>
        </member>
        <member name="P:OpenAI.Usage.TotalTokens">
            <summary>
            Gets or sets the total tokens.
            </summary>
        </member>
        <member name="T:OpenAI.Infrastructure.AllowNameMismatch">
            <summary>
            Used to indicate that a particular property is allowed to have a name that isn't a strict
            <c>snake_case</c> -> <c>CamelCase</c> conversion from the JSON name defined its
            <see cref="T:Newtonsoft.Json.JsonPropertyAttribute" /> property.
            </summary>
            <remarks>
            This is only used for an internal wholesome test.
            </remarks>
        </member>
        <member name="M:OpenAI.Infrastructure.AsyncUtils.ToEnumerable``1(System.Collections.Generic.IAsyncEnumerable{``0})">
            <summary>
            Converts an async-enumerable sequence to an enumerable sequence.
            </summary>
            <typeparam name="TSource">The type of the elements in the source sequence.</typeparam>
            <param name="source">An async-enumerable sequence to convert to an enumerable sequence.</param>
            <returns>The enumerable sequence containing the elements in the async-enumerable sequence.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <remarks>
            This code is largely borrowed from the System.Linq.Async project (see
            https://github.com/dotnet/reactive/blob/7ad606b3dcd4bb2c6ae9622f8a59db7f8f52aa85/Ix.NET/Source/System.Linq.Async/System/Linq/Operators/ToEnumerable.cs).
            The reason we're not using System.Linq.Async directly is that it can cause issues with
            some versions of EF Core.
            </remarks>
        </member>
        <member name="T:OpenAI.Infrastructure.FormEncoding.FormEncoder">
            <summary>
            This class provides methods to serialize various objects with
            <c>application/x-www-form-urlencoded</c> encoding. This is used to encode request
            parameters to be sent to OpenAI's API.
            </summary>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.CreateHttpContent(OpenAI.BaseOptions)">
            <summary>Creates an <see cref="T:System.Net.Http.HttpContent"/> for a given options class.</summary>
            <param name="options">The options class.</param>
            <returns>The <see cref="T:System.Net.Http.HttpContent"/>.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.CreateQueryString(OpenAI.BaseOptions)">
            <summary>Creates the HTTP query string for a given options class.</summary>
            <param name="options">The options class.</param>
            <returns>The query string.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.CreateQueryString(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Creates the HTTP query string for a collection of name/value tuples.</summary>
            <param name="nameValueCollection">The collection of name/value tuples.</param>
            <returns>The query string.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.UrlEncode(System.String)">
            <summary>URL-encodes a string.</summary>
            <param name="value">The string to URL-encode.</param>
            <returns>The URL-encoded string.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.FlattenParamsValue(System.Object,System.String)">
            <summary>
            Returns a list of parameters for a given value. The value can be basically anything, as
            long as it can be encoded in some way.
            </summary>
            <param name="value">The value for which to create the list of parameters.</param>
            <param name="keyPrefix">The key under which new keys should be nested, if any.</param>
            <returns>The list of parameters.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.FlattenParamsAnyOf(OpenAI.IAnyOf,System.String)">
            <summary>
            Returns a list of parameters for a given <see cref="T:OpenAI.IAnyOf"/> instance.
            </summary>
            <param name="anyOf">The instance for which to create the list of parameters.</param>
            <param name="keyPrefix">The key under which new keys should be nested, if any.</param>
            <returns>The list of parameters.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.FlattenParamsOptions(OpenAI.INestedOptions,System.String)">
            <summary>
            Returns a list of parameters for a given options class. If a key prefix is provided, the
            keys for the new parameters will be nested under the key prefix. E.g. if the key prefix
            `foo` is passed and the options class contains a parameter `bar`, then a parameter
            with key `foo[bar]` will be returned.
            </summary>
            <param name="options">The options class for which to create the list of parameters.</param>
            <param name="keyPrefix">The key under which new keys should be nested, if any.</param>
            <returns>The list of parameters.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.FlattenParamsDictionary(System.Collections.IDictionary,System.String)">
            <summary>
            Returns a list of parameters for a given dictionary. If a key prefix is provided, the
            keys for the new parameters will be nested under the key prefix. E.g. if the key prefix
            `foo` is passed and the dictionary contains a key `bar`, then a parameter with key
            `foo[bar]` will be returned.
            </summary>
            <param name="dictionary">The dictionary for which to create the list of parameters.</param>
            <param name="keyPrefix">The key under which new keys should be nested, if any.</param>
            <returns>The list of parameters.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.FlattenParamsList(System.Collections.IEnumerable,System.String)">
            <summary>
            Returns a list of parameters for a given list of objects. The parameter keys will be
            indexed under the `keyPrefix` parameter. E.g. if the `keyPrefix` is `foo`, then the
            key for the first element's will be `foo[0]`, etc.
            </summary>
            <param name="list">The list for which to create the list of parameters.</param>
            <param name="keyPrefix">The key under which new keys should be nested.</param>
            <returns>The list of parameters.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.SingleParam(System.String,System.Object)">
            <summary>Creates a list containing a single parameter.</summary>
            <param name="key">The parameter's key.</param>
            <param name="value">The parameter's value.</param>
            <returns>A list containing the single parameter.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormEncoder.NewPrefix(System.String,System.String)">
            <summary>
            Computes the new key prefix, given a key and an existing prefix (if any).
            E.g. if the key is `bar` and the existing prefix is `foo`, then `foo[bar]` is returned.
            If a key already contains nested values, then only the non-nested part is nested under
            the prefix, e.g. if the key is `bar[baz]` and the prefix is `foo`, then `foo[bar][baz]`
            is returned.
            If no prefix is provided, the key is returned unchanged.
            </summary>
            <param name="key">The key.</param>
            <param name="keyPrefix">The existing key prefix, if any.</param>
            <returns>The new key prefix.</returns>
        </member>
        <member name="T:OpenAI.Infrastructure.FormEncoding.FormUrlEncodedContent">
            <summary>
            A container for name/value tuples encoded using <c>application/x-www-form-urlencoded</c>
            MIME type.
            </summary>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.Infrastructure.FormEncoding.FormUrlEncodedContent"/> class.
            </summary>
            <param name="nameValueCollection">The collection of name/value tuples to encode.</param>
        </member>
        <member name="T:OpenAI.Infrastructure.FormEncoding.JsonContent">
            <summary>
            A container for name/value tuples encoded using <c>application/json</c>
            MIME type.
            </summary>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.JsonContent.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.Infrastructure.FormEncoding.JsonContent"/> class.
            </summary>
            <param name="nameValueCollection">The collection of name/value tuples to encode.</param>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.MimeTypes.GetMimeType(System.String)">
            <summary>Gets the content type for a given file extension.</summary>
            <param name="extension">The file extension.</param>
            <returns>
            The content type, or <c>application/octet-stream</c> if the file extension is unknown.
            </returns>
        </member>
        <member name="T:OpenAI.Infrastructure.FormEncoding.MultipartFormDataContent">
            <summary>
            A container for content encoded using <c>multipart/form-data</c> MIME type.
            </summary>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.MultipartFormDataContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.Infrastructure.FormEncoding.MultipartFormDataContent"/> class.
            </summary>
            <param name="nameValueCollection">The collection of name/value tuples to encode.</param>
        </member>
        <member name="M:OpenAI.Infrastructure.FormEncoding.MultipartFormDataContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.Infrastructure.FormEncoding.MultipartFormDataContent"/> class.
            </summary>
            <param name="nameValueCollection">The collection of name/value tuples to encode.</param>
            <param name="boundary">The boundary string for the multipart form data content.</param>
        </member>
        <member name="T:OpenAI.Infrastructure.AnyOfConverter">
            <summary>
            Converts a <see cref="T:OpenAI.IAnyOf"/> to and from JSON.
            </summary>
        </member>
        <member name="P:OpenAI.Infrastructure.AnyOfConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter"/> can write JSON.
            </summary>
            <value>
                <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:OpenAI.Infrastructure.AnyOfConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:OpenAI.Infrastructure.AnyOfConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.AnyOfConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
                <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:OpenAI.Infrastructure.OpenAIEntityConverter">
            <summary>
            This converter is used to deserialize objects inheriting from OpenAIEntity.
            It sets the RawJObject property so that undocumented and unsupported fields can be accessed or logged.
            </summary>
        </member>
        <member name="P:OpenAI.Infrastructure.OpenAIEntityConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter"/> can write JSON.
            </summary>
            <value>
                <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:OpenAI.Infrastructure.OpenAIEntityConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
                <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:OpenAI.Infrastructure.OpenAIEntityConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:OpenAI.Infrastructure.OpenAIEntityConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:OpenAI.Infrastructure.OpenAIObjectConverter">
            <summary>
            This converter can be used to deserialize any OpenAI object. It is mainly useful for
            polymorphic attributes, when the property's type is an interface instead of a concrete type.
            In this case, the converter will use the value of the `object` key in the JSON payload to
            decide which concrete type to instantiate. If no concrete type is found (or if one is found,
            but it's not compatible with the expected interface), then the converter returns `null`.
            </summary>
        </member>
        <member name="P:OpenAI.Infrastructure.OpenAIObjectConverter.CanWrite">
            <summary>
            Gets a value indicating whether this <see cref="T:Newtonsoft.Json.JsonConverter"/> can write JSON.
            </summary>
            <value>
                <c>true</c> if this <see cref="T:Newtonsoft.Json.JsonConverter"/> can write JSON; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:OpenAI.Infrastructure.OpenAIObjectConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:OpenAI.Infrastructure.OpenAIObjectConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.OpenAIObjectConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
                <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:OpenAI.Infrastructure.UnixDateTimeConverter">
            <summary>
            Converts a <see cref="T:System.DateTime"/> to and from Unix epoch time.
            </summary>
            <remarks>
            This is a somewhat simplified version of the converter with the same name that was added in
            Newtonsoft.Json 11.0. Once we bump the minimum version of Newtonsoft.Json to 11.0, we can
            start using the provided converter and get rid of this class.
            </remarks>
        </member>
        <member name="M:OpenAI.Infrastructure.UnixDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="M:OpenAI.Infrastructure.UnixDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing property value of the JSON that is being converted.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.JsonUtils.DeserializeObject``1(System.String,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to the specified .NET type using
            <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <typeparam name="T">The type of the object to deserialize to.</typeparam>
            <param name="value">The JSON to deserialize.</param>
            <param name="settings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.JsonUtils.DeserializeObject(System.String,System.Type,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Deserializes the JSON to the specified .NET type using
            <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/>.
            </summary>
            <param name="value">The JSON to deserialize.</param>
            <param name="type">The type of the object to deserialize to.</param>
            <param name="settings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to deserialize the object.
            </param>
            <returns>The deserialized object from the JSON string.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.JsonUtils.SerializeObject(System.Object,Newtonsoft.Json.Formatting,Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Serializes the specified object to a JSON string without using any default settings.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="formatting">Indicates how the output should be formatted.</param>
            <param name="settings">
            The <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> used to serialize the object.
            </param>
            <returns>A JSON string representation of the object.</returns>
        </member>
        <member name="T:OpenAI.Infrastructure.RandomUtils">
            <summary>
            RandomUtils class.
            </summary>
        </member>
        <member name="M:OpenAI.Infrastructure.RandomUtils.Next(System.Security.Cryptography.RandomNumberGenerator,System.Int32,System.Int32)">
            <summary>
            Gets the next random number between the minimum and maximum.
            </summary>
            <param name="generator">The generator.</param>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="T:OpenAI.Infrastructure.RuntimeInformation">
            <summary>
            This class is used to gather information about the runtime environment. This is actually a
            non-trivial task. The code below is largely borrowed from the
            <a href="https://github.com/dotnet/BenchmarkDotNet">BenchmarkDotNet</a> project.
            </summary>
        </member>
        <member name="P:OpenAI.Infrastructure.RuntimeInformation.IsCoreRT">
            <summary>
            "The north star for CoreRT is to be a flavor of .NET Core" -> CoreRT reports .NET Core everywhere.
            </summary>
        </member>
        <member name="M:OpenAI.Infrastructure.RuntimeInformation.GetOSVersion">
            <summary>Returns a string that describes the operating system on which the app is running.</summary>
            <returns>A string that describes the operating system on which the app is running.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.RuntimeInformation.GetRuntimeVersion">
            <summary>Returns a string that indicates the name of the .NET installation on which an app is running.</summary>
            <returns>A string that indicates the name of the .NET installation on which an app is running.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.RuntimeInformation.GetNewtonsoftJsonVersion">
            <summary>Returns a string with the Newtonsoft.Json assembly version number.</summary>
            <returns>A string with the Newtonsoft.Json assembly version number.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.StringUtils.ToSnakeCase(System.String)">
            <summary>Converts the string to snake case.</summary>
            <param name="str">The string to convert.</param>
            <returns>A string with the contents of the input string converted to snake_case.</returns>
        </member>
        <member name="M:OpenAI.Infrastructure.StringUtils.SecureEquals(System.String,System.String)">
            <summary>
            Determines whether the two specified <see cref="T:System.String"/> objects have the same value.
            The comparison is done in constant time to prevent timing attacks.
            </summary>
            <param name="a">The first string to compare.</param>
            <param name="b">The second string to compare.</param>
            <returns>
            <c>true</c> if the value of the <c>a</c> parameter is equal to the value of the <c>b</c>
            parameter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:OpenAI.Infrastructure.StringUtils.ContainsWhitespace(System.String)">
            <summary>Checks whether a string contains any whitespace characters or not.</summary>
            <param name="str">The string to check.</param>
            <returns>
            <c>true</c> if the string contains any whitespace characters; otherwise, <c>false</c>.
            </returns>
            <exception name="ArgumentNullException">Thrown if <c>str</c> is <c>null</c>.</exception>
        </member>
        <member name="T:OpenAI.IHttpClient">
            <summary>
            Interface for HTTP clients used to make requests to OpenAI's API.
            </summary>
        </member>
        <member name="M:OpenAI.IHttpClient.MakeRequestAsync(OpenAI.OpenAIRequest,System.Threading.CancellationToken)">
            <summary>Sends a request to OpenAI's API as an asynchronous operation.</summary>
            <param name="request">The parameters of the request to send.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The task object representing the asynchronous operation.</returns>
        </member>
        <member name="T:OpenAI.IOpenAIClient">
            <summary>
            Interface for a OpenAI client.
            </summary>
        </member>
        <member name="P:OpenAI.IOpenAIClient.ApiBase">
            <summary>Gets the base URL for OpenAI's API.</summary>
            <value>The base URL for OpenAI's API.</value>
        </member>
        <member name="P:OpenAI.IOpenAIClient.ApiKey">
            <summary>Gets the API key used by the client to send requests.</summary>
            <value>The API key used by the client to send requests.</value>
        </member>
        <member name="P:OpenAI.IOpenAIClient.OrganizationId">
            <summary>Gets the Organization ID used by the client.</summary>
            <value>The Organization ID used by the client.</value>
        </member>
        <member name="M:OpenAI.IOpenAIClient.RequestAsync``1(System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>Sends a request to OpenAI's API as an asynchronous operation.</summary>
            <typeparam name="T">Type of the OpenAI entity returned by the API.</typeparam>
            <param name="method">The HTTP method.</param>
            <param name="path">The path of the request.</param>
            <param name="options">The parameters of the request.</param>
            <param name="requestOptions">The special modifiers of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:OpenAI.OpenAIException">Thrown if the request fails.</exception>
        </member>
        <member name="T:OpenAI.OpenAIClient">
            <summary>
            A OpenAI client, used to issue requests to OpenAI's API and deserialize responses.
            </summary>
        </member>
        <member name="M:OpenAI.OpenAIClient.#ctor(System.String,System.String,OpenAI.IHttpClient,System.String)">
            <summary>Initializes a new instance of the <see cref="T:OpenAI.OpenAIClient"/> class.</summary>
            <param name="apiKey">The API key used by the client to make requests.</param>
            <param name="organizationId">The organization ID used by the client.</param>
            <param name="httpClient">
            The <see cref="T:OpenAI.IHttpClient"/> client to use. If <c>null</c>, an HTTP client will be
            created with default parameters.
            </param>
            <param name="apiBase">
            The base URL for OpenAI's API. Defaults to <see cref="P:OpenAI.OpenAIClient.DefaultApiBase"/>.
            </param>
            <exception cref="T:System.ArgumentNullException">if <c>apiKey</c> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException">
            if <c>apiKey</c> is empty or contains whitespace.
            </exception>
        </member>
        <member name="P:OpenAI.OpenAIClient.DefaultApiBase">
            <summary>Default base URL for OpenAI's API.</summary>
        </member>
        <member name="P:OpenAI.OpenAIClient.ApiBase">
            <summary>Gets the base URL for OpenAI's API.</summary>
            <value>The base URL for OpenAI's API.</value>
        </member>
        <member name="P:OpenAI.OpenAIClient.ApiKey">
            <summary>Gets the API key used by the client to send requests.</summary>
            <value>The API key used by the client to send requests.</value>
        </member>
        <member name="P:OpenAI.OpenAIClient.OrganizationId">
            <summary>Gets the client ID used by the client in OAuth requests.</summary>
            <value>The client ID used by the client in OAuth requests.</value>
        </member>
        <member name="P:OpenAI.OpenAIClient.HttpClient">
            <summary>Gets the <see cref="T:OpenAI.IHttpClient"/> used to send HTTP requests.</summary>
            <value>The <see cref="T:OpenAI.IHttpClient"/> used to send HTTP requests.</value>
        </member>
        <member name="M:OpenAI.OpenAIClient.RequestAsync``1(System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>Sends a request to OpenAI's API as an asynchronous operation.</summary>
            <typeparam name="T">Type of the OpenAI entity returned by the API.</typeparam>
            <param name="method">The HTTP method.</param>
            <param name="path">The path of the request.</param>
            <param name="options">The parameters of the request.</param>
            <param name="requestOptions">The special modifiers of the request.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:OpenAI.OpenAIException">Thrown if the request fails.</exception>
        </member>
        <member name="M:OpenAI.OpenAIClient.RequestAsync``1(System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>Sends a request to OpenAI's API as an asynchronous operation.</summary>
            <typeparam name="T">Type of the OpenAI entity returned by the API.</typeparam>
            <param name="method">The HTTP method.</param>
            <param name="path">The path of the request.</param>
            <param name="options">The parameters of the request.</param>
            <param name="requestOptions">The special modifiers of the request.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>The task object representing the asynchronous operation.</returns>
            <exception cref="T:OpenAI.OpenAIException">Thrown if the request fails.</exception>
        </member>
        <member name="T:OpenAI.OpenAIConfiguration">
            <summary>
            Global configuration class for OpenAI settings.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIConfiguration.ApiKey">
            <summary>
            Gets or sets the API key.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIConfiguration.OrganizationId">
            <summary>
            Organization id passed to OpenAI.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIConfiguration.SerializerSettings">
            <summary>
            Gets or sets the settings used for deserializing JSON objects returned by OpenAI's API.
            It is highly recommended you do not change these settings, as doing so can produce
            unexpected results. If you do change these settings, make sure that
            <see cref="T:OpenAI.Infrastructure.OpenAIObjectConverter"/> is among the converters,
            otherwise OpenAI will no longer be able to deserialize polymorphic resources
            represented by interfaces.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIConfiguration.MaxNetworkRetries">
            <summary>
            Gets or sets the maximum number of times that the library will retry requests that
            appear to have failed due to an intermittent problem.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIConfiguration.OpenAIClient">
            <summary>
            Gets or sets a custom <see cref="P:OpenAI.OpenAIConfiguration.OpenAIClient"/> for sending requests to OpenAI's
            API. You can use this to use a custom message handler, set proxy parameters, etc.
            </summary>
            <example>
            To use a custom message handler:
            <code>
            System.Net.Http.HttpMessageHandler messageHandler = ...;
            var httpClient = new System.Net.HttpClient(messageHandler);
            var openAIClient = new OpenAI.OpenAIClient(
                openAIApiKey,
                httpClient: new OpenAI.SystemNetHttpClient(httpClient));
            OpenAI.OpenAIConfiguration.OpenAIClient = openAIClient;
            </code>
            </example>
        </member>
        <member name="P:OpenAI.OpenAIConfiguration.OpenAIClientVersion">
            <summary>Gets the version of the OpenAI client library.</summary>
        </member>
        <member name="M:OpenAI.OpenAIConfiguration.DefaultSerializerSettings">
            <summary>
            Returns a new instance of <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> with
            the default settings used by OpenAI.
            </summary>
            <returns>A <see cref="T:Newtonsoft.Json.JsonSerializerSettings"/> instance.</returns>
        </member>
        <member name="T:OpenAI.OpenAIException">
            <summary>
            The OpenAI exception.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:OpenAI.OpenAIException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.OpenAIException"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.OpenAIException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.OpenAIException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:OpenAI.OpenAIException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.OpenAIException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="err">The error.</param>
        </member>
        <member name="M:OpenAI.OpenAIException.#ctor(System.Net.HttpStatusCode,OpenAI.OpenAIError,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.OpenAIException"/> class.
            </summary>
            <param name="httpStatusCode">The HTTP status code.</param>
            <param name="openAIError">The OpenAI error.</param>
            <param name="message">The message.</param>
        </member>
        <member name="P:OpenAI.OpenAIException.HttpStatusCode">
            <summary>
            Gets or sets the HTTP status code.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIException.OpenAIError">
            <summary>
            Gets or sets the OpenAI error.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIException.OpenAIResponse">
            <summary>
            Gets or sets the OpenAI response.
            </summary>
        </member>
        <member name="T:OpenAI.OpenAIRequest">
            <summary>
            Represents a request to OpenAI's API.
            </summary>
        </member>
        <member name="M:OpenAI.OpenAIRequest.#ctor(OpenAI.IOpenAIClient,System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>Initializes a new instance of the <see cref="T:OpenAI.OpenAIRequest"/> class.</summary>
            <param name="client">The client creating the request.</param>
            <param name="method">The HTTP method.</param>
            <param name="path">The path of the request.</param>
            <param name="options">The parameters of the request.</param>
            <param name="requestOptions">The special modifiers of the request.</param>
        </member>
        <member name="P:OpenAI.OpenAIRequest.Method">
            <summary>The HTTP method for the request (GET, POST or DELETE).</summary>
        </member>
        <member name="P:OpenAI.OpenAIRequest.Uri">
            <summary>
            The URL for the request. If this is a GET or DELETE request, the URL also includes
            the request parameters in its query string.
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIRequest.AuthorizationHeader">
            <summary>The value of the <c>Authorization</c> header with the API key.</summary>
        </member>
        <member name="P:OpenAI.OpenAIRequest.OpenAIHeaders">
            <summary>
            Dictionary containing OpenAI custom headers (<c>OpenAI-Organization</c>...).
            </summary>
        </member>
        <member name="P:OpenAI.OpenAIRequest.Content">
            <summary>
            The body of the request. For POST requests, this will be either a
            <c>application/x-www-form-urlencoded</c>, <c>multipart/form-data</c> or a <c>application/json</c> payload.
            For non-POST requests, this will be <c>null</c>.
            </summary>
            <remarks>This getter creates a new instance every time it is called.</remarks>
        </member>
        <member name="M:OpenAI.OpenAIRequest.ToString">
            <summary>Returns a string that represents the <see cref="T:OpenAI.OpenAIRequest"/>.</summary>
            <returns>A string that represents the <see cref="T:OpenAI.OpenAIRequest"/>.</returns>
        </member>
        <member name="T:OpenAI.OpenAIResponse">
            <summary>
            Represents a buffered textual response from OpenAI's API.
            </summary>
        </member>
        <member name="M:OpenAI.OpenAIResponse.#ctor(System.Net.HttpStatusCode,System.Net.Http.Headers.HttpResponseHeaders,System.String)">
            <summary>Initializes a new instance of the <see cref="T:OpenAI.OpenAIResponse"/> class.</summary>
            <param name="statusCode">The HTTP status code.</param>
            <param name="headers">The HTTP headers of the response.</param>
            <param name="content">The body of the response.</param>
        </member>
        <member name="P:OpenAI.OpenAIResponse.Content">
            <summary>Gets the body of the response.</summary>
            <value>The body of the response.</value>
        </member>
        <member name="T:OpenAI.OpenAIResponseBase">
            <summary>
            Represents a response from OpenAI's API.
            </summary>
        </member>
        <member name="M:OpenAI.OpenAIResponseBase.#ctor(System.Net.HttpStatusCode,System.Net.Http.Headers.HttpResponseHeaders)">
            <summary>Initializes a new instance of the <see cref="T:OpenAI.OpenAIResponseBase"/> class.</summary>
            <param name="statusCode">The HTTP status code.</param>
            <param name="headers">The HTTP headers of the response.</param>
        </member>
        <member name="P:OpenAI.OpenAIResponseBase.StatusCode">
            <summary>Gets the HTTP status code of the response.</summary>
            <value>The HTTP status code of the response.</value>
        </member>
        <member name="P:OpenAI.OpenAIResponseBase.Headers">
            <summary>Gets the HTTP headers of the response.</summary>
            <value>The HTTP headers of the response.</value>
        </member>
        <member name="P:OpenAI.OpenAIResponseBase.Date">
            <summary>Gets the date of the request, as returned by OpenAI.</summary>
            <value>The date of the request, as returned by OpenAI.</value>
        </member>
        <member name="P:OpenAI.OpenAIResponseBase.OrganizationId">
            <summary>Gets the organization id key of the request, as returned by OpenAI.</summary>
            <value>The organization id key of the request, as returned by OpenAI.</value>
        </member>
        <member name="P:OpenAI.OpenAIResponseBase.RequestId">
            <summary>Gets the ID of the request, as returned by OpenAI.</summary>
            <value>The ID of the request, as returned by OpenAI.</value>
        </member>
        <member name="M:OpenAI.OpenAIResponseBase.ToString">
            <summary>Returns a string that represents the <see cref="T:OpenAI.OpenAIResponse"/>.</summary>
            <returns>A string that represents the <see cref="T:OpenAI.OpenAIResponse"/>.</returns>
        </member>
        <member name="T:OpenAI.OpenAITypeRegistry">
            <summary>
            The OpenAI type registry.
            </summary>
        </member>
        <member name="F:OpenAI.OpenAITypeRegistry.ObjectsToTypes">
            <summary>
            Dictionary mapping the values contained in the `object` key of JSON payloads returned
            by OpenAI's API to concrete types of model classes.
            </summary>
        </member>
        <member name="M:OpenAI.OpenAITypeRegistry.GetConcreteType(System.Type,System.String)">
            <summary>
            Returns the concrete type to use, given a potential type and the value of the `object`
            key in a JSON payload.
            </summary>
            <param name="potentialType">Potential type. Can be a concrete type or an interface.</param>
            <param name="objectValue">Value of the `object` key in the JSON payload.</param>
            <returns>The concrete type to use, or `null`.</returns>
        </member>
        <member name="T:OpenAI.SystemNetHttpClient">
            <summary>
            Standard client to make requests to OpenAI's API, using
            <see cref="T:System.Net.Http.HttpClient"/> to send HTTP requests.
            It can automatically retry failed requests when it's safe to do so.
            </summary>
        </member>
        <member name="F:OpenAI.SystemNetHttpClient.DefaultMaxNumberRetries">
            <summary>Default maximum number of retries made by the client.</summary>
        </member>
        <member name="M:OpenAI.SystemNetHttpClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.SystemNetHttpClient"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.SystemNetHttpClient.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.SystemNetHttpClient"/> class.
            </summary>
            <param name="maxNetworkRetries">
            The maximum number of times the client will retry requests that fail due to an
            intermittent problem.
            </param>
        </member>
        <member name="M:OpenAI.SystemNetHttpClient.#ctor(System.Net.Http.HttpClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.SystemNetHttpClient"/> class.
            </summary>
            <param name="httpClient">
            The <see cref="T:System.Net.Http.HttpClient"/> client to use. If <c>null</c>, an HTTP
            client will be created with default parameters.
            </param>
        </member>
        <member name="M:OpenAI.SystemNetHttpClient.#ctor(System.Net.Http.HttpClient,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.SystemNetHttpClient"/> class.
            </summary>
            <param name="httpClient">
            The <see cref="T:System.Net.Http.HttpClient"/> client to use. If <c>null</c>, an HTTP
            client will be created with default parameters.
            </param>
            <param name="maxNetworkRetries">
            The maximum number of times the client will retry requests that fail due to an
            intermittent problem.
            </param>
        </member>
        <member name="P:OpenAI.SystemNetHttpClient.DefaultHttpTimeout">
            <summary>Default timespan before the request times out.</summary>
        </member>
        <member name="P:OpenAI.SystemNetHttpClient.MaxNetworkRetriesDelay">
            <summary>
            Maximum sleep time between tries to send HTTP requests after network failure.
            </summary>
        </member>
        <member name="P:OpenAI.SystemNetHttpClient.MinNetworkRetriesDelay">
            <summary>
            Minimum sleep time between tries to send HTTP requests after network failure.
            </summary>
        </member>
        <member name="P:OpenAI.SystemNetHttpClient.MaxNetworkRetries">
            <summary>
            Gets how many network retries were configured for this client.
            </summary>
        </member>
        <member name="P:OpenAI.SystemNetHttpClient.NetworkRetriesSleep">
            <summary>
            Gets or sets a value indicating whether the client should sleep between automatic
            request retries.
            </summary>
            <remarks>This is an internal property meant to be used in tests only.</remarks>
        </member>
        <member name="M:OpenAI.SystemNetHttpClient.BuildDefaultSystemNetHttpClient">
            <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.HttpClient"/> class
            with default parameters.
            </summary>
            <returns>The new instance of the <see cref="T:System.Net.Http.HttpClient"/> class.</returns>
        </member>
        <member name="M:OpenAI.SystemNetHttpClient.MakeRequestAsync(OpenAI.OpenAIRequest)">
            <summary>
            Make a HTTP request as an asynchronous operation.
            </summary>
            <param name="request">The parameters of the request to send.</param>
            <returns>A Task&lt;OpenAIResponse&gt; representing the asynchronous operation.</returns>
        </member>
        <member name="M:OpenAI.SystemNetHttpClient.MakeRequestAsync(OpenAI.OpenAIRequest,System.Threading.CancellationToken)">
            <summary>
            Make a HTTP request as an asynchronous operation.
            </summary>
            <param name="request">The parameters of the request to send.</param>
            <param name="cancellationToken">The cancellation token to cancel operation.</param>
            <returns>A Task&lt;OpenAIResponse&gt; representing the asynchronous operation.</returns>
        </member>
        <member name="T:OpenAI.AnyOf">
            <summary>
            Abstract base class for <c>AnyOf&lt;&gt;</c> generic classes.
            </summary>
        </member>
        <member name="P:OpenAI.AnyOf.Value">
            <summary>Gets the value of the current <see cref="T:OpenAI.AnyOf"/> object.</summary>
            <returns>The value of the current <see cref="T:OpenAI.AnyOf"/> object.</returns>
        </member>
        <member name="P:OpenAI.AnyOf.Type">
            <summary>Gets the type of the current <see cref="T:OpenAI.AnyOf"/> object.</summary>
            <returns>The type of the current <see cref="T:OpenAI.AnyOf"/> object.</returns>
        </member>
        <member name="M:OpenAI.AnyOf.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:OpenAI.AnyOf`2">
            <summary>
            <see cref="T:OpenAI.AnyOf`2"/> is a generic class that can hold a value of one of two different
            types. It uses implicit conversion operators to seamlessly accept or return either type.
            This is used to represent polymorphic request parameters, i.e. parameters that can
            be different types (typically a string or an options class).
            </summary>
            <typeparam name="T1">The first possible type of the value.</typeparam>
            <typeparam name="T2">The second possible type of the value.</typeparam>
        </member>
        <member name="M:OpenAI.AnyOf`2.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.AnyOf`2"/> class with type <c>T1</c>.
            </summary>
            <param name="value">The value to hold.</param>
        </member>
        <member name="M:OpenAI.AnyOf`2.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.AnyOf`2"/> class with type <c>T2</c>.
            </summary>
            <param name="value">The value to hold.</param>
        </member>
        <member name="P:OpenAI.AnyOf`2.Value">
            <summary>Gets the value of the current <see cref="T:OpenAI.AnyOf`2"/> object.</summary>
            <returns>The value of the current <see cref="T:OpenAI.AnyOf`2"/> object.</returns>
        </member>
        <member name="P:OpenAI.AnyOf`2.Type">
            <summary>Gets the type of the current <see cref="T:OpenAI.AnyOf`2"/> object.</summary>
            <returns>The type of the current <see cref="T:OpenAI.AnyOf`2"/> object.</returns>
        </member>
        <member name="M:OpenAI.AnyOf`2.op_Implicit(`0)~OpenAI.AnyOf{`0,`1}">
            <summary>
            Converts a value of type <c>T1</c> to an <see cref="T:OpenAI.AnyOf`2"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>An <see cref="T:OpenAI.AnyOf`2"/> object that holds the value.</returns>
        </member>
        <member name="M:OpenAI.AnyOf`2.op_Implicit(`1)~OpenAI.AnyOf{`0,`1}">
            <summary>
            Converts a value of type <c>T2</c> to an <see cref="T:OpenAI.AnyOf`2"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>An <see cref="T:OpenAI.AnyOf`2"/> object that holds the value.</returns>
        </member>
        <member name="M:OpenAI.AnyOf`2.op_Implicit(OpenAI.AnyOf{`0,`1})~`0">
            <summary>
            Converts an <see cref="T:OpenAI.AnyOf`2"/> object to a value of type <c>T1</c>.
            </summary>
            <param name="anyOf">The <see cref="T:OpenAI.AnyOf`2"/> object to convert.</param>
            <returns>
            A value of type <c>T1</c>. If the <see cref="T:OpenAI.AnyOf`2"/> object currently
            holds a value of a different type, the default value for type <c>T1</c> is returned.
            </returns>
        </member>
        <member name="M:OpenAI.AnyOf`2.op_Implicit(OpenAI.AnyOf{`0,`1})~`1">
            <summary>
            Converts a value of type <c>T2</c> to an <see cref="T:OpenAI.AnyOf`2"/> object.
            </summary>
            <param name="anyOf">The <see cref="T:OpenAI.AnyOf`2"/> object to convert.</param>
            <returns>
            A value of type <c>T2</c>. If the <see cref="T:OpenAI.AnyOf`2"/> object currently
            holds a value of a different type, the default value for type <c>T2</c> is returned.
            </returns>
        </member>
        <member name="T:OpenAI.AnyOf`3">
            <summary>
            <see cref="T:OpenAI.AnyOf`3"/> is a generic class that can hold a value of one of three
            different types. It uses implicit conversion operators to seamlessly accept or return any
            of the possible types.
            This is used to represent polymorphic request parameters, i.e. parameters that can
            be different types (typically a string or an options class).
            </summary>
            <typeparam name="T1">The first possible type of the value.</typeparam>
            <typeparam name="T2">The second possible type of the value.</typeparam>
            <typeparam name="T3">The third possible type of the value.</typeparam>
        </member>
        <member name="M:OpenAI.AnyOf`3.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.AnyOf`3"/> class with type
            <c>T1</c>.
            </summary>
            <param name="value">The value to hold.</param>
        </member>
        <member name="M:OpenAI.AnyOf`3.#ctor(`1)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.AnyOf`3"/> class with type
            <c>T2</c>.
            </summary>
            <param name="value">The value to hold.</param>
        </member>
        <member name="M:OpenAI.AnyOf`3.#ctor(`2)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.AnyOf`3"/> class with type
            <c>T3</c>.
            </summary>
            <param name="value">The value to hold.</param>
        </member>
        <member name="P:OpenAI.AnyOf`3.Value">
            <summary>Gets the value of the current <see cref="T:OpenAI.AnyOf`3"/> object.</summary>
            <returns>The value of the current <see cref="T:OpenAI.AnyOf`3"/> object.</returns>
        </member>
        <member name="P:OpenAI.AnyOf`3.Type">
            <summary>Gets the type of the current <see cref="T:OpenAI.AnyOf`3"/> object.</summary>
            <returns>The type of the current <see cref="T:OpenAI.AnyOf`3"/> object.</returns>
        </member>
        <member name="M:OpenAI.AnyOf`3.op_Implicit(`0)~OpenAI.AnyOf{`0,`1,`2}">
            <summary>
            Converts a value of type <c>T1</c> to an <see cref="T:OpenAI.AnyOf`3"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>An <see cref="T:OpenAI.AnyOf`3"/> object that holds the value.</returns>
        </member>
        <member name="M:OpenAI.AnyOf`3.op_Implicit(`1)~OpenAI.AnyOf{`0,`1,`2}">
            <summary>
            Converts a value of type <c>T2</c> to an <see cref="T:OpenAI.AnyOf`3"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>An <see cref="T:OpenAI.AnyOf`3"/> object that holds the value.</returns>
        </member>
        <member name="M:OpenAI.AnyOf`3.op_Implicit(`2)~OpenAI.AnyOf{`0,`1,`2}">
            <summary>
            Converts a value of type <c>T3</c> to an <see cref="T:OpenAI.AnyOf`3"/> object.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>An <see cref="T:OpenAI.AnyOf`3"/> object that holds the value.</returns>
        </member>
        <member name="M:OpenAI.AnyOf`3.op_Implicit(OpenAI.AnyOf{`0,`1,`2})~`0">
            <summary>
            Converts an <see cref="T:OpenAI.AnyOf`3"/> object to a value of type <c>T1</c>.
            </summary>
            <param name="anyOf">The <see cref="T:OpenAI.AnyOf`3"/> object to convert.</param>
            <returns>
            A value of type <c>T1</c>. If the <see cref="T:OpenAI.AnyOf`3"/> object currently
            holds a value of a different type, the default value for type <c>T3</c> is returned.
            </returns>
        </member>
        <member name="M:OpenAI.AnyOf`3.op_Implicit(OpenAI.AnyOf{`0,`1,`2})~`1">
            <summary>
            Converts an <see cref="T:OpenAI.AnyOf`3"/> object to a value of type <c>T2</c>.
            </summary>
            <param name="anyOf">The <see cref="T:OpenAI.AnyOf`3"/> object to convert.</param>
            <returns>
            A value of type <c>T2</c>. If the <see cref="T:OpenAI.AnyOf`3"/> object currently
            holds a value of a different type, the default value for type <c>T3</c> is returned.
            </returns>
        </member>
        <member name="M:OpenAI.AnyOf`3.op_Implicit(OpenAI.AnyOf{`0,`1,`2})~`2">
            <summary>
            Converts an <see cref="T:OpenAI.AnyOf`3"/> object to a value of type <c>T3</c>.
            </summary>
            <param name="anyOf">The <see cref="T:OpenAI.AnyOf`3"/> object to convert.</param>
            <returns>
            A value of type <c>T3</c>. If the <see cref="T:OpenAI.AnyOf`3"/> object currently
            holds a value of a different type, the default value for type <c>T3</c> is returned.
            </returns>
        </member>
        <member name="T:OpenAI.BaseOptions">
            <summary>
            Base class for OpenAI options classes, i.e. classes representing parameters for OpenAI
            API requests.
            </summary>
        </member>
        <member name="P:OpenAI.BaseOptions.Expand">
            <summary>Specifies which fields in the response should be expanded.</summary>
        </member>
        <member name="P:OpenAI.BaseOptions.ExtraParams">
            <summary>Dictionary containing extra request parameters.</summary>
        </member>
        <member name="M:OpenAI.BaseOptions.AddRangeExpand(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a collection of <c>expand</c> values to the request, to request expansion of
            specific fields in the response. When requesting expansions in a list request, don't
            forget to prefix the field names with <c>data.</c>.
            </summary>
            <param name="values">The collection of names of the fields to expand.</param>
        </member>
        <member name="M:OpenAI.BaseOptions.AddExtraParam(System.String,System.Object)">
            <summary>
            Adds an extra parameter to the request. This can be useful if you need to use
            parameters not available in regular options classes, e.g. for beta features.
            </summary>
            <param name="key">The parameter's key.</param>
            <param name="value">The parameter's value.</param>
        </member>
        <member name="T:OpenAI.ListOptions">
            <summary>
            The OpenAI list options.
            </summary>
            <seealso cref="T:OpenAI.BaseOptions" />
        </member>
        <member name="T:OpenAI.Service`1">
            <summary>Abstract base class for all services.</summary>
            <typeparam name="TEntityReturned">
            The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.
            </typeparam>
        </member>
        <member name="M:OpenAI.Service`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.Service`1"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.Service`1.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.Service`1"/> class with a
            custom <see cref="T:OpenAI.IOpenAIClient"/>.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.Service`1.BasePath">
            <summary>
            Gets the base path.
            </summary>
        </member>
        <member name="P:OpenAI.Service`1.BaseUrl">
            <summary>
            Gets the base URL.
            </summary>
        </member>
        <member name="P:OpenAI.Service`1.Client">
            <summary>
            Gets or sets the client used by this service to send requests. If no client was set when the
            service instance was created, then the default client in
            <see cref="P:OpenAI.OpenAIConfiguration.OpenAIClient"/> is used instead.
            </summary>
            <remarks>
            Setting the client at runtime may not be thread-safe.
            If you wish to use a custom client, it is recommended that you pass it to the service's constructor and not change it during the service's lifetime.
            </remarks>
        </member>
        <member name="M:OpenAI.Service`1.CreateEntity(OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>
            Creates the entity.
            </summary>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.CreateEntityAsync(OpenAI.BaseOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the entity asynchronously.
            </summary>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.DeleteEntity(System.String,OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>
            Deletes the entity.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.DeleteEntityAsync(System.String,OpenAI.BaseOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the entity asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.GetEntity(System.String,OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the entity.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.GetEntityAsync(System.String,OpenAI.BaseOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the entity asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.ListEntities(OpenAI.ListOptions,OpenAI.RequestOptions)">
            <summary>
            Lists the entities.
            </summary>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.ListEntitiesAsync(OpenAI.ListOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the entities asynchronously.
            </summary>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.UpdateEntity(System.String,OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>
            Updates the entity.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.UpdateEntityAsync(System.String,OpenAI.BaseOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the entity asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.Request(System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>
            Requests the specified method.
            </summary>
            <param name="method">The method.</param>
            <param name="path">The path.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.RequestAsync(System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>
            Requests the specified method asynchronously.
            </summary>
            <param name="method">The HTTP method.</param>
            <param name="path">The path.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.RequestAsync(System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Requests the specified method asynchronously.
            </summary>
            <param name="method">The HTTP method.</param>
            <param name="path">The path.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.Request``1(System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>
            Requests the specified method.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="method">The method.</param>
            <param name="path">The path.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.RequestAsync``1(System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions)">
            <summary>
            Requests the HTTP call asynchronously.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="method">The method.</param>
            <param name="path">The path.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.RequestAsync``1(System.Net.Http.HttpMethod,System.String,OpenAI.BaseOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Requests the HTTP call asynchronously.
            </summary>
            <typeparam name="T">T.</typeparam>
            <param name="method">The method.</param>
            <param name="path">The path.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The type of <see cref="T:OpenAI.IOpenAIEntity"/> that this service returns.</returns>
        </member>
        <member name="M:OpenAI.Service`1.SetupRequestOptions(OpenAI.RequestOptions)">
            <summary>
            Sets up the request options.
            </summary>
            <param name="requestOptions">The request options.</param>
            <returns>Request options.</returns>
        </member>
        <member name="M:OpenAI.Service`1.ClassUrl">
            <summary>
            The class URL.
            </summary>
            <returns>The class url.</returns>
        </member>
        <member name="M:OpenAI.Service`1.InstanceUrl(System.String)">
            <summary>
            The encoded URL Instance.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The encoded URL instance.</returns>
            <exception cref="T:System.ArgumentException">The resource ID cannot be null or whitespace. - id.</exception>
        </member>
        <member name="T:OpenAI.StringEnum">
             <summary>
             Abstract base class for string enum parameters.
             </summary>
             <remarks>
             This class is used to define request parameters that can only take certain string values.
             We use it instead of defining a regular <c>enum</c> with
             <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/> annotations for
             serialization because <c>enum</c> is really an integer under the hood. This can be
             problematic in some cases, like when a parameter can be an integer OR a string enum.
             </remarks>
             <example>
             This sample shows how to define a new string enum type.
             <code>
             public class FooBar : StringEnum
             {
                 public static readonly FooBar Foo = new FooBar("foo");
                 public static readonly FooBar Bar = new FooBar("bar");
            
                 private FooBar(string value) : base(value) {}
             }
             </code>
             </example>
        </member>
        <member name="M:OpenAI.StringEnum.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:OpenAI.StringEnum"/> class.</summary>
            <param name="value">The serialized value for the instance.</param>
        </member>
        <member name="P:OpenAI.StringEnum.Value">
            <summary>Gets or sets the serialized value.</summary>
            <returns>The serialized value.</returns>
        </member>
        <member name="M:OpenAI.StringEnum.ToString">
            <summary>Returns the serialized value.</summary>
            <returns>The serialized value.</returns>
        </member>
        <member name="T:OpenAI.RequestOptions">
            <summary>
            The HTTP request options.
            </summary>
        </member>
        <member name="P:OpenAI.RequestOptions.ApiKey">
            <summary>
            Gets or sets the <a href="https://beta.openai.com/docs/api-reference/authentication">API
            key</a> to use for the request.
            </summary>
        </member>
        <member name="P:OpenAI.RequestOptions.OrganizationId">
            <summary>
            Get or sets the
            <a href="https://beta.openai.com/account/org-settings">Organization Id
            of the connected account</a> to use for the request.
            </summary>
        </member>
        <member name="P:OpenAI.RequestOptions.BaseUrl">
            <summary>Gets or sets the base URL for the request.</summary>
            <remarks>
            This is an internal property. It is set by services or individual request methods.
            </remarks>
        </member>
        <member name="M:OpenAI.RequestOptions.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>The cloned instance.</returns>
        </member>
        <member name="T:OpenAI.ChatGPT3CompletionCreateOptions">
            <summary>
            Completion prompt and parameters.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.Model">
            <summary>
            ID of the model to use.
            You can use the <see href="https://beta.openai.com/docs/api-reference/models/list">List models</see> API to see all of your available models, or see the OpenAI <see href="https://beta.openai.com/docs/models/overview">Model overview</see> for descriptions of them.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.Messages">
            <summary>
            The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.
            Note that &lt;|endoftext|&gt; is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.Temperature">
            <summary>
            What <see href="https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277">sampling temperature</see> to use. Higher values means the model will take more risks.
            Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.
            We generally recommend altering this or top_p but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.TopP">
            <summary>
            An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.N">
            <summary>
            How many completions to generate for each prompt.
            Note: Because this parameter generates many completions, it can quickly consume your token quota.
            Use carefully and ensure that you have reasonable settings for max_tokens and stop.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.Stream">
            <summary>
            Whether to stream back partial progress.
            If set, tokens will be sent as data-only <see href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format">server-sent events</see> as they become available, with the stream terminated by a data: [DONE] message.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.Stop">
            <summary>
            Up to 4 sequences where the API will stop generating further tokens.
            The returned text will not contain the stop sequence.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.PresencePenalty">
            <summary>
            Number between -2.0 and 2.0.
            Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.
            <see href="https://beta.openai.com/docs/api-reference/parameter-details">See more information about frequency and presence penalties</see>.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.FrequencyPenalty">
            <summary>
            Number between -2.0 and 2.0.
            Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
            <see href="https://beta.openai.com/docs/api-reference/parameter-details">See more information about frequency and presence penalties</see>.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.LogitBias">
            <summary>
            Modify the likelihood of specified tokens appearing in the completion.
            Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100.
            You can use this <see href="https://beta.openai.com/tokenizer?view=bpe">tokenizer tool</see> (which works for both GPT-2 and GPT-3) to convert text to token IDs.
            Mathematically, the bias is added to the logits generated by the model prior to sampling.
            The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.
            As an example, you can pass {"50256": -100} to prevent the &lt;|endoftext|&gt; token from being generated.
            </summary>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionCreateOptions.User">
            <summary>
            A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
            </summary>
        </member>
        <member name="T:OpenAI.ChatGPT3CompletionService">
            <summary>
            Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.
            </summary>
        </member>
        <member name="M:OpenAI.ChatGPT3CompletionService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.ChatGPT3CompletionService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.ChatGPT3CompletionService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.ChatGPT3CompletionService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.ChatGPT3CompletionService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.ChatGPT3CompletionService.Create(OpenAI.ChatGPT3CompletionCreateOptions)">
            <summary>
            Creates a chat gpt3 completion entity with the specified options.
            </summary>
            <param name="chatGPT3CompletionCreateOptions">The chat gpt-3 completion create options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.ChatGPT3CompletionService.Create(OpenAI.ChatGPT3CompletionCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a chat gpt3 completion entity with the specified options.
            </summary>
            <param name="chatGPT3CompletionCreateOptions">The chat gpt-3 completion create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.ChatGPT3CompletionService.CreateAsync(OpenAI.ChatGPT3CompletionCreateOptions)">
            <summary>
            Creates a chat gpt3 completion entity with the specified options asynchronously.
            </summary>
            <param name="chatGPT3CompletionCreateOptions">The chat gpt-3 completion create options.</param>
            <returns>Task&lt;Completion&gt;.</returns>
        </member>
        <member name="M:OpenAI.ChatGPT3CompletionService.CreateAsync(OpenAI.ChatGPT3CompletionCreateOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a chat gpt3 completion entity with the specified options asynchronously.
            </summary>
            <param name="chatGPT3CompletionCreateOptions">The chat gpt-3 completion create options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Completion&gt;.</returns>
        </member>
        <member name="M:OpenAI.ChatGPT3CompletionService.CreateAsync(OpenAI.ChatGPT3CompletionCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a chat gpt3 completion entity with the specified options asynchronously.
            </summary>
            <param name="chatGPT3CompletionCreateOptions">The chat gpt-3 completion create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Completion&gt;.</returns>
        </member>
        <member name="M:OpenAI.ChatGPT3CompletionService.CreateAsync(OpenAI.ChatGPT3CompletionCreateOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a chat gpt3 completion entity with the specified options asynchronously.
            </summary>
            <param name="chatGPT3CompletionCreateOptions">The chat gpt-3 completion create options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Completion&gt;.</returns>
        </member>
        <member name="T:OpenAI.CompletionCreateOptions">
            <summary>
            Completion prompt and parameters.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.Model">
            <summary>
            ID of the model to use.
            You can use the <see href="https://beta.openai.com/docs/api-reference/models/list">List models</see> API to see all of your available models, or see the OpenAI <see href="https://beta.openai.com/docs/models/overview">Model overview</see> for descriptions of them.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.Prompt">
            <summary>
            The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.
            Note that &lt;|endoftext|&gt; is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.Suffix">
            <summary>
            The suffix that comes after a completion of inserted text.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.MaxTokens">
            <summary>
            The maximum number of <see href="https://beta.openai.com/tokenizer">tokens</see> to generate in the completion.
            The token count of your prompt plus max_tokens cannot exceed the model's context length.
            Most models have a context length of 2048 tokens (except for the newest models, which support 4096).
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.Temperature">
            <summary>
            What <see href="https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277">sampling temperature</see> to use. Higher values means the model will take more risks.
            Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.
            We generally recommend altering this or top_p but not both.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.TopP">
            <summary>
            An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.N">
            <summary>
            How many completions to generate for each prompt.
            Note: Because this parameter generates many completions, it can quickly consume your token quota.
            Use carefully and ensure that you have reasonable settings for max_tokens and stop.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.Stream">
            <summary>
            Whether to stream back partial progress.
            If set, tokens will be sent as data-only <see href="https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format">server-sent events</see> as they become available, with the stream terminated by a data: [DONE] message.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.LogProbs">
            <summary>
            Include the log probabilities on the logprobs most likely tokens, as well the chosen tokens.
            For example, if logprobs is 5, the API will return a list of the 5 most likely tokens.
            The API will always return the logprob of the sampled token, so there may be up to logprobs+1 elements in the response.
            The maximum value for logprobs is 5.
            If you need more than this, please contact OpenAI through the <see href="https://help.openai.com/">Help center</see> and describe your use case.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.Echo">
            <summary>
            Echo back the prompt in addition to the completion.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.Stop">
            <summary>
            Up to 4 sequences where the API will stop generating further tokens.
            The returned text will not contain the stop sequence.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.PresencePenalty">
            <summary>
            Number between -2.0 and 2.0.
            Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.
            <see href="https://beta.openai.com/docs/api-reference/parameter-details">See more information about frequency and presence penalties</see>.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.FrequencyPenalty">
            <summary>
            Number between -2.0 and 2.0.
            Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
            <see href="https://beta.openai.com/docs/api-reference/parameter-details">See more information about frequency and presence penalties</see>.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.BestOf">
            <summary>
            Generates best_of completions server-side and returns the "best" (the one with the highest log probability per token). Results cannot be streamed.
            When used with n, best_of controls the number of candidate completions and n specifies how many to return – best_of must be greater than n.
            Note: Because this parameter generates many completions, it can quickly consume your token quota.
            Use carefully and ensure that you have reasonable settings for max_tokens and stop.
            </summary>
        </member>
        <member name="P:OpenAI.CompletionCreateOptions.LogitBias">
            <summary>
            Modify the likelihood of specified tokens appearing in the completion.
            Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100.
            You can use this <see href="https://beta.openai.com/tokenizer?view=bpe">tokenizer tool</see> (which works for both GPT-2 and GPT-3) to convert text to token IDs.
            Mathematically, the bias is added to the logits generated by the model prior to sampling.
            The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.
            As an example, you can pass {"50256": -100} to prevent the &lt;|endoftext|&gt; token from being generated.
            </summary>
        </member>
        <member name="T:OpenAI.CompletionService">
            <summary>
            Given a prompt, the model will return one or more predicted completions, and can also return the probabilities of alternative tokens at each position.
            </summary>
        </member>
        <member name="M:OpenAI.CompletionService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.CompletionService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.CompletionService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.CompletionService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.CompletionService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.CompletionService.Create(OpenAI.CompletionCreateOptions)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="completionCreateOptions">The completion create options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.CompletionService.Create(OpenAI.CompletionCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="completionCreateOptions">The completion create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.CompletionService.CreateAsync(OpenAI.CompletionCreateOptions)">
            <summary>
            Creates a completion entity with the specified options asynchronously.
            </summary>
            <param name="completionCreateOptions">The completion create options.</param>
            <returns>Task&lt;Completion&gt;.</returns>
        </member>
        <member name="M:OpenAI.CompletionService.CreateAsync(OpenAI.CompletionCreateOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a completion entity with the specified options asynchronously.
            </summary>
            <param name="completionCreateOptions">The completion create options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Completion&gt;.</returns>
        </member>
        <member name="M:OpenAI.CompletionService.CreateAsync(OpenAI.CompletionCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a completion entity with the specified options asynchronously.
            </summary>
            <param name="completionCreateOptions">The completion create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Completion&gt;.</returns>
        </member>
        <member name="M:OpenAI.CompletionService.CreateAsync(OpenAI.CompletionCreateOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a completion entity with the specified options asynchronously.
            </summary>
            <param name="completionCreateOptions">The completion create options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Completion&gt;.</returns>
        </member>
        <member name="T:OpenAI.EditCreateOptions">
            <summary>
            Edit input, instruction, and parameters.
            </summary>
        </member>
        <member name="P:OpenAI.EditCreateOptions.Model">
            <summary>
            ID of the model to use.
            You can use the <see href="https://beta.openai.com/docs/api-reference/models/list">List models</see> API to see all of your available models, or see the OpenAI <see href="https://beta.openai.com/docs/models/overview">Model overview</see> for descriptions of them.
            </summary>
        </member>
        <member name="P:OpenAI.EditCreateOptions.Input">
            <summary>
            The input text to use as a starting point for the edit.
            </summary>
        </member>
        <member name="P:OpenAI.EditCreateOptions.Instruction">
            <summary>
            The instruction that tells the model how to edit the prompt.
            </summary>
        </member>
        <member name="P:OpenAI.EditCreateOptions.N">
            <summary>
            How many edits to generate for the input and instruction.
            </summary>
        </member>
        <member name="P:OpenAI.EditCreateOptions.Temperature">
            <summary>
            What <see href="https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277">sampling temperature</see> to use. Higher values means the model will take more risks.
            Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.
            We generally recommend altering this or top_p but not both.
            </summary>
        </member>
        <member name="P:OpenAI.EditCreateOptions.TopP">
            <summary>
            An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass.
            So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            We generally recommend altering this or temperature but not both.
            </summary>
        </member>
        <member name="T:OpenAI.EditService">
            <summary>
            Given a prompt and an instruction, the model will return an edited version of the prompt.
            </summary>
        </member>
        <member name="M:OpenAI.EditService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.EditService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.EditService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.EditService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.EditService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.EditService.Create(OpenAI.EditCreateOptions)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="editCreateOptions">The edit create options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.EditService.Create(OpenAI.EditCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="editCreateOptions">The edit create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.EditService.CreateAsync(OpenAI.EditCreateOptions)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="editCreateOptions">The edit create options.</param>
            <returns>Task&lt;Edit&gt;.</returns>
        </member>
        <member name="M:OpenAI.EditService.CreateAsync(OpenAI.EditCreateOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="editCreateOptions">The edit create options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Edit&gt;.</returns>
        </member>
        <member name="M:OpenAI.EditService.CreateAsync(OpenAI.EditCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="editCreateOptions">The edit create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Edit&gt;.</returns>
        </member>
        <member name="M:OpenAI.EditService.CreateAsync(OpenAI.EditCreateOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="editCreateOptions">The edit create options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Edit&gt;.</returns>
        </member>
        <member name="T:OpenAI.EmbeddingCreateOptions">
            <summary>
            The embedding create options.
            Implements the <see cref="T:OpenAI.BaseOptions" />.
            </summary>
            <seealso cref="T:OpenAI.BaseOptions" />
        </member>
        <member name="P:OpenAI.EmbeddingCreateOptions.Model">
            <summary>
            ID of the model to use.
            You can use the <see href="https://beta.openai.com/docs/api-reference/models/list">List models</see> API to see all of your available models, or see the OpenAI <see href="https://beta.openai.com/docs/models/overview">Model overview</see> for descriptions of them.
            </summary>
            <value>The model.</value>
        </member>
        <member name="P:OpenAI.EmbeddingCreateOptions.Input">
            <summary>
            Gets or sets the input.
            </summary>
            <value>The input.</value>
        </member>
        <member name="T:OpenAI.EmbeddingService">
            <summary>
            Creates an embedding vector representing the input text.
            </summary>
        </member>
        <member name="M:OpenAI.EmbeddingService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.EmbeddingService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.EmbeddingService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.EmbeddingService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.EmbeddingService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.EmbeddingService.Create(OpenAI.EmbeddingCreateOptions)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="embeddingCreateOptions">The embedding create options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.EmbeddingService.Create(OpenAI.EmbeddingCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="embeddingCreateOptions">The embedding create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.EmbeddingService.CreateAsync(OpenAI.EmbeddingCreateOptions)">
            <summary>
            Creates a embedding result with the specified options asynchronously.
            </summary>
            <param name="embeddingCreateOptions">The embedding create options.</param>
            <returns>Task&lt;Embedding&gt;.</returns>
        </member>
        <member name="M:OpenAI.EmbeddingService.CreateAsync(OpenAI.EmbeddingCreateOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a embedding result with the specified options asynchronously.
            </summary>
            <param name="embeddingCreateOptions">The embedding create options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Embedding&gt;.</returns>
        </member>
        <member name="M:OpenAI.EmbeddingService.CreateAsync(OpenAI.EmbeddingCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a embedding result with the specified options asynchronously.
            </summary>
            <param name="embeddingCreateOptions">The embedding create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Embedding&gt;.</returns>
        </member>
        <member name="M:OpenAI.EmbeddingService.CreateAsync(OpenAI.EmbeddingCreateOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a embedding result with the specified options asynchronously.
            </summary>
            <param name="embeddingCreateOptions">The embedding create options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Embedding&gt;.</returns>
        </member>
        <member name="T:OpenAI.EngineGetOptions">
            <summary>
            Engine get options class .
            Implements the <see cref="T:OpenAI.BaseOptions" />.
            </summary>
        </member>
        <member name="T:OpenAI.EngineListOptions">
            <summary>
            Engine list options class.
            Implements the <see cref="T:OpenAI.ListOptions" />.
            </summary>
        </member>
        <member name="T:OpenAI.EngineService">
            <summary>
            Class EngineService.
            Implements the <see cref="!:OpenAI.Service&lt;OpenAI.Engine&gt;" />
            Implements the <see cref="!:OpenAI.IListable&lt;OpenAI.Engine, OpenAI.EngineListOptions&gt;" />
            Implements the <see cref="!:OpenAI.IRetrievable&lt;OpenAI.Engine, OpenAI.EngineGetOptions&gt;" />.
            </summary>
            <seealso cref="!:OpenAI.Service&lt;OpenAI.Engine&gt;" />
            <seealso cref="!:OpenAI.IListable&lt;OpenAI.Engine, OpenAI.EngineListOptions&gt;" />
            <seealso cref="!:OpenAI.IRetrievable&lt;OpenAI.Engine, OpenAI.EngineGetOptions&gt;" />
        </member>
        <member name="M:OpenAI.EngineService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.EngineService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.EngineService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.EngineService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.EngineService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.EngineService.Get(System.String)">
            <summary>
            Gets the specified engine by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Engine.</returns>
        </member>
        <member name="M:OpenAI.EngineService.Get(System.String,OpenAI.EngineGetOptions)">
            <summary>
            Gets the specified engine by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="engineGetOptions">The engine get options.</param>
            <returns>Engine.</returns>
        </member>
        <member name="M:OpenAI.EngineService.Get(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the specified engine by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Engine.</returns>
        </member>
        <member name="M:OpenAI.EngineService.Get(System.String,OpenAI.EngineGetOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the specified engine by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="engineGetOptions">The engine get options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Engine.</returns>
        </member>
        <member name="M:OpenAI.EngineService.GetAsync(System.String)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Task&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.GetAsync(System.String,OpenAI.EngineGetOptions)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="engineGetOptions">The engine get options.</param>
            <returns>Task&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.GetAsync(System.String,OpenAI.EngineGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="engineGetOptions">The engine get options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.GetAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.GetAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.GetAsync(System.String,OpenAI.EngineGetOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="engineGetOptions">The engine get options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.List">
            <summary>
            Lists the specified engines by options.
            </summary>
            <returns>OpenAIList&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.List(OpenAI.EngineListOptions)">
            <summary>
            Lists the specified engines by options.
            </summary>
            <param name="engineListOptions">The engine list options.</param>
            <returns>OpenAIList&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.List(OpenAI.RequestOptions)">
            <summary>
            Lists the specified engines by options.
            </summary>
            <param name="requestOptions">The request options.</param>
            <returns>OpenAIList&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.List(OpenAI.EngineListOptions,OpenAI.RequestOptions)">
            <summary>
            Lists the specified engines by options.
            </summary>
            <param name="engineListOptions">The engine list options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>OpenAIList&lt;Engine&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.ListAsync">
            <summary>
            Lists the specified engines by the provided options asynchronously.
            </summary>
            <returns>Task&lt;OpenAIList&lt;Engine&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the specified engines by the provided options asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;Engine&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.ListAsync(OpenAI.EngineListOptions)">
            <summary>
            Lists the specified engines by the provided options asynchronously.
            </summary>
            <param name="engineListOptions">The engine list options.</param>
            <returns>Task&lt;OpenAIList&lt;Engine&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.ListAsync(OpenAI.EngineListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the specified engines by the provided options asynchronously.
            </summary>
            <param name="engineListOptions">The engine list options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;Engine&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.ListAsync(OpenAI.RequestOptions)">
            <summary>
            Lists the specified engines by the provided options asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;OpenAIList&lt;Engine&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.ListAsync(OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the specified engines by the provided options asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;Engine&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.ListAsync(OpenAI.EngineListOptions,OpenAI.RequestOptions)">
            <summary>
            Lists the specified engines by the provided options asynchronously.
            </summary>
            <param name="engineListOptions">The engine list options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;OpenAIList&lt;Engine&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.EngineService.ListAsync(OpenAI.EngineListOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the specified engines by the provided options asynchronously.
            </summary>
            <param name="engineListOptions">The engine list options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;Engine&gt;&gt;.</returns>
        </member>
        <member name="T:OpenAI.FileContentService">
            <summary>
            Class FileContentService.
            Implements the <see cref="!:OpenAI.Service&lt;OpenAI.FileContent&gt;" />.
            </summary>
            <seealso cref="!:OpenAI.Service&lt;OpenAI.FileContent&gt;" />
        </member>
        <member name="M:OpenAI.FileContentService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.FileContentService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.FileContentService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.FileContentService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.FileContentService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.FileContentService.Get(System.String)">
            <summary>
            Gets the file content by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>FileContent.</returns>
        </member>
        <member name="M:OpenAI.FileContentService.Get(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the file content by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>FileContent.</returns>
        </member>
        <member name="M:OpenAI.FileContentService.GetAsync(System.String)">
            <summary>
            Gets the file content by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Task&lt;FileContent&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileContentService.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the file content by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FileContent&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileContentService.GetAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the file content by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;FileContent&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileContentService.GetAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the file content by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FileContent&gt;.</returns>
        </member>
        <member name="T:OpenAI.FileCreateOptions">
            <summary>
            Class FileCreateOptions.
            Implements the <see cref="T:OpenAI.BaseOptions" />.
            </summary>
            <seealso cref="T:OpenAI.BaseOptions" />
        </member>
        <member name="P:OpenAI.FileCreateOptions.Purpose">
            <summary>
            Gets or sets the purpose.
            </summary>
            <value>The purpose.</value>
        </member>
        <member name="P:OpenAI.FileCreateOptions.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>The file.</value>
        </member>
        <member name="P:OpenAI.FileCreateOptions.FileSource">
            <summary>
            The file source path.
            </summary>
            <value>The file source.</value>
        </member>
        <member name="T:OpenAI.FileDeleteOptions">
            <summary>
            File delete options class.
            Implements the <see cref="T:OpenAI.BaseOptions" />.
            </summary>
            <seealso cref="T:OpenAI.BaseOptions" />
        </member>
        <member name="T:OpenAI.FileGetOptions">
            <summary>
            File get options class.
            Implements the <see cref="T:OpenAI.BaseOptions" />.
            </summary>
            <seealso cref="T:OpenAI.BaseOptions" />
        </member>
        <member name="T:OpenAI.FileListOptions">
            <summary>
            File list options class.
            Implements the <see cref="T:OpenAI.ListOptions" />.
            </summary>
            <seealso cref="T:OpenAI.ListOptions" />
        </member>
        <member name="T:OpenAI.FileService">
            <summary>
            Files are used to upload documents that can be used with features like <see href="https://beta.openai.com/docs/api-reference/fine-tunes">Fine-tuning</see>Fine-tuning.
            Implements the <see cref="!:OpenAI.Service&lt;OpenAI.File&gt;" />.
            Implements the <see cref="!:OpenAI.IListable&lt;OpenAI.File, OpenAI.FileListOptions&gt;" />.
            Implements the <see cref="!:OpenAI.IRetrievable&lt;OpenAI.File, OpenAI.FileGetOptions&gt;" />.
            Implements the <see cref="!:OpenAI.ICreatable&lt;OpenAI.File, OpenAI.FileCreateOptions&gt;" />.
            Implements the <see cref="!:OpenAI.IDeletable&lt;OpenAI.File, OpenAI.FileDeleteOptions&gt;" />.
            </summary>
            <seealso cref="!:OpenAI.Service&lt;OpenAI.File&gt;" />
            <seealso cref="!:OpenAI.IListable&lt;OpenAI.File, OpenAI.FileListOptions&gt;" />
            <seealso cref="!:OpenAI.IRetrievable&lt;OpenAI.File, OpenAI.FileGetOptions&gt;" />
            <seealso cref="!:OpenAI.ICreatable&lt;OpenAI.File, OpenAI.FileCreateOptions&gt;" />
            <seealso cref="!:OpenAI.IDeletable&lt;OpenAI.File, OpenAI.FileDeleteOptions&gt;" />
        </member>
        <member name="M:OpenAI.FileService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.FileService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.FileService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.FileService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.FileService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.FileService.Get(System.String)">
            <summary>
            Gets the file by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>File.</returns>
        </member>
        <member name="M:OpenAI.FileService.Get(System.String,OpenAI.FileGetOptions)">
            <summary>
            Gets the file by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileGetOptions">The file get options.</param>
            <returns>File.</returns>
        </member>
        <member name="M:OpenAI.FileService.Get(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the file by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>File.</returns>
        </member>
        <member name="M:OpenAI.FileService.Get(System.String,OpenAI.FileGetOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the file by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileGetOptions">The file get options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>File.</returns>
        </member>
        <member name="M:OpenAI.FileService.GetAsync(System.String)">
            <summary>
            Gets the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.GetAsync(System.String,OpenAI.FileGetOptions)">
            <summary>
            Gets the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileGetOptions">The file get options.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.GetAsync(System.String,OpenAI.FileGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileGetOptions">The file get options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.GetAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.GetAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.GetAsync(System.String,OpenAI.FileGetOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileGetOptions">The file get options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.List(OpenAI.FileListOptions,OpenAI.RequestOptions)">
            <summary>
            Lists the specified options.
            </summary>
            <param name="fileListOptions">The file list options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>OpenAIList&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.ListAsync">
            <summary>
            Lists the files by the specified options asynchronously.
            </summary>
            <returns>Task&lt;OpenAIList&lt;File&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the files by the specified options asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;File&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.ListAsync(OpenAI.FileListOptions)">
            <summary>
            Lists the files by the specified options asynchronously.
            </summary>
            <param name="fileListOptions">The file list options.</param>
            <returns>Task&lt;OpenAIList&lt;File&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.ListAsync(OpenAI.FileListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the files by the specified options asynchronously.
            </summary>
            <param name="fileListOptions">The file list options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;File&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.ListAsync(OpenAI.RequestOptions)">
            <summary>
            Lists the files by the specified options asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;OpenAIList&lt;File&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.ListAsync(OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the files by the specified options asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;File&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.ListAsync(OpenAI.FileListOptions,OpenAI.RequestOptions)">
            <summary>
            Lists the files by the specified options asynchronously.
            </summary>
            <param name="fileListOptions">The file list options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;OpenAIList&lt;File&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.ListAsync(OpenAI.FileListOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the files by the specified options asynchronously.
            </summary>
            <param name="fileListOptions">The file list options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;File&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.Create(OpenAI.FileCreateOptions)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="createOptions">The create options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.FileService.Create(OpenAI.FileCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="createOptions">The create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.FileService.CreateAsync(OpenAI.FileCreateOptions)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="fileCreateOptions">The file create options.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.CreateAsync(OpenAI.FileCreateOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="fileCreateOptions">The file create options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.CreateAsync(OpenAI.FileCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="fileCreateOptions">The file create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.CreateAsync(OpenAI.FileCreateOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="fileCreateOptions">The file create options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.Delete(System.String)">
            <summary>
            Deletes the file by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>File.</returns>
        </member>
        <member name="M:OpenAI.FileService.Delete(System.String,OpenAI.FileDeleteOptions)">
            <summary>
            Deletes the file by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileDeleteOptions">The file delete options.</param>
            <returns>File.</returns>
        </member>
        <member name="M:OpenAI.FileService.Delete(System.String,OpenAI.RequestOptions)">
            <summary>
            Deletes the file by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>File.</returns>
        </member>
        <member name="M:OpenAI.FileService.Delete(System.String,OpenAI.FileDeleteOptions,OpenAI.RequestOptions)">
            <summary>
            Deletes the file by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileDeleteOptions">The file delete options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>File.</returns>
        </member>
        <member name="M:OpenAI.FileService.DeleteAsync(System.String)">
            <summary>
            Deletes the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.DeleteAsync(System.String,OpenAI.FileDeleteOptions)">
            <summary>
            Deletes the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileDeleteOptions">The file delete options.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.DeleteAsync(System.String,OpenAI.FileDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileDeleteOptions">The file delete options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.DeleteAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Deletes the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.DeleteAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.DeleteAsync(System.String,OpenAI.FileDeleteOptions,OpenAI.RequestOptions)">
            <summary>
            Deletes the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileDeleteOptions">The file delete options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="M:OpenAI.FileService.DeleteAsync(System.String,OpenAI.FileDeleteOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the file by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fileDeleteOptions">The file delete options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task&lt;File&gt;.</returns>
        </member>
        <member name="T:OpenAI.FineTuneCreateOptions">
            <summary>
            Creates a job that fine-tunes a specified model from a given dataset.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.TrainingFile">
            <summary>
            The ID of an uploaded file that contains training data.
            See <see href="https://beta.openai.com/docs/api-reference/files/upload">upload file</see> for how to upload a file.
            Your dataset must be formatted as a JSONL file, where each training example is a JSON object with the keys \"prompt\" and \"completion\".
            Additionally, you must upload your file with the purpose `fine-tune`.
            See the <see href="https://beta.openai.com/docs/guides/fine-tuning/creating-training-data">fine-tuning guide</see> for more details.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.ValidationFile">
            <summary>
            The ID of an uploaded file that contains validation data.
            If you provide this file, the data is used to generate validation metrics periodically during fine-tuning.
            These metrics can be viewed in the <see href="https://beta.openai.com/docs/guides/fine-tuning/analyzing-your-fine-tuned-model">fine-tuning results file</see>.
            Your train and validation data should be mutually exclusive.
            Your dataset must be formatted as a JSONL file, where each validation example is a JSON object with the keys \"prompt\" and \"completion\".
            Additionally, you must upload your file with the purpose `fine-tune`.
            See the <see href="https://beta.openai.com/docs/guides/fine-tuning/creating-training-data">fine-tuning guide</see> for more details.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.Model">
            <summary>
            The name of the base model to fine-tune. You can select one of \"ada\", \"babbage\", \"curie\", \"davinci\", or a fine-tuned model created after 2022-04-21.
            To learn more about these models, see the <see href="https://beta.openai.com/docs/models">Models</see> documentation.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.NEpochs">
            <summary>
            The number of epochs to train the model for.
            An epoch refers to one full cycle through the training dataset.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.BatchSize">
            <summary>
            The batch size to use for training.
            The batch size is the number of training examples used to train a single forward and backward pass.
            By default, the batch size will be dynamically configured to be ~0.2% of the number of examples in the training set, capped at 256 - in general, OpenAI has found that larger batch sizes tend to work better for larger datasets.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.LearningRateMultiplier">
            <summary>
            The learning rate multiplier to use for training.
            The fine-tuning learning rate is the original learning rate used for pretraining multiplied by this value.
            By default, the learning rate multiplier is the 0.05, 0.1, or 0.2 depending on final `batch_size` (larger learning rates tend to perform better with larger batch sizes).
            OpenAI recommend experimenting with values in the range 0.02 to 0.2 to see what produces the best results.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.PromptLossWeight">
            <summary>
            The weight to use for loss on the prompt tokens.
            This controls how much the model tries to learn to generate the prompt (as compared to the completion which always has a weight of 1.0), and can add a stabilizing effect to training when completions are short.
            If prompts are extremely long (relative to completions), it may make sense to reduce this weight so as to avoid over-prioritizing learning the prompt.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.ComputeClassificationMetrics">
            <summary>
            If set, OpenAI calculate classification-specific metrics such as accuracy and F-1 score using the validation set at the end of every epoch.
            These metrics can be viewed in the <see href="https://beta.openai.com/docs/guides/fine-tuning/analyzing-your-fine-tuned-model">results file</see>.
            In order to compute classification metrics, you must provide a `validation_file`.
            Additionally, you must specify `classification_n_classes` for multiclass classification or `classification_positive_class` for binary classification.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.ClassificationNClasses">
            <summary>
            The number of classes in a classification task.
            This parameter is required for multiclass classification.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.ClassificationPositiveClass">
            <summary>
            The positive class in binary classification.
            This parameter is needed to generate precision, recall, and F1 metrics when doing binary classification.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.ClassificationBetas">
            <summary>
            If this is provided, OpenAI calculate F-beta scores at the specified beta values.
            The F-beta score is a generalization of F-1 score.
            This is only used for binary classification.
            With a beta of 1 (i.e. the F-1 score), precision and recall are given the same weight.
            A larger beta score puts more weight on recall and less on precision.
            A smaller beta score puts more weight on precision and less on recall.
            </summary>
        </member>
        <member name="P:OpenAI.FineTuneCreateOptions.Suffix">
            <summary>
            A string of up to 40 characters that will be added to your fine-tuned model name.
            For example, a `suffix` of \"custom-model-name\" would produce a model name like `ada:ft-your-org:custom-model-name-2022-02-15-04-21-04`.
            </summary>
        </member>
        <member name="T:OpenAI.FineTuneEventsGetOptions">
            <summary>
            Fine tune events get options class.
            Implements the <see cref="T:OpenAI.ListOptions" />.
            </summary>
            <seealso cref="T:OpenAI.ListOptions" />
        </member>
        <member name="T:OpenAI.FineTuneEventsService">
            <summary>
            FineTuneEventsService class.
            Implements the <see cref="!:OpenAI.Service&lt;OpenAI.FineTuneEvents&gt;" />.
            </summary>
            <seealso cref="!:OpenAI.Service&lt;OpenAI.FineTuneEvents&gt;" />
        </member>
        <member name="M:OpenAI.FineTuneEventsService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.FineTuneEventsService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.FineTuneEventsService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.FineTuneEventsService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.Get(System.String)">
            <summary>
            Gets the fine-tune events by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>FineTuneEvents.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.Get(System.String,OpenAI.FineTuneEventsGetOptions)">
            <summary>
            Gets the fine-tune events by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneEventsGetOptions">The fine tune events get options.</param>
            <returns>FineTuneEvents.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.Get(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the fine-tune events by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>FineTuneEvents.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.Get(System.String,OpenAI.FineTuneEventsGetOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the fine-tune events by the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneEventsGetOptions">The fine tune events get options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>FineTuneEvents.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.GetAsync(System.String)">
            <summary>
            Gets the fine-tune events by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Task&lt;FineTuneEvents&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the fine-tune events by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTuneEvents&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.GetAsync(System.String,OpenAI.FineTuneEventsGetOptions)">
            <summary>
            Gets the fine-tune events by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneEventsGetOptions">The fine-tune events get options.</param>
            <returns>Task&lt;FineTuneEvents&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.GetAsync(System.String,OpenAI.FineTuneEventsGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the fine-tune events by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneEventsGetOptions">The fine-tune events get options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTuneEvents&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.GetAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the fine-tune events by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;FineTuneEvents&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.GetAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the fine-tune events by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTuneEvents&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.GetAsync(System.String,OpenAI.FineTuneEventsGetOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the fine-tune events by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneEventsGetOptions">The fine-tune events get options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;FineTuneEvents&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneEventsService.GetAsync(System.String,OpenAI.FineTuneEventsGetOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the fine-tune events by the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneEventsGetOptions">The fine-tune events get options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTuneEvents&gt;.</returns>
        </member>
        <member name="T:OpenAI.FineTuneGetOptions">
            <summary>
            Fine tune get options class.
            Implements the <see cref="T:OpenAI.BaseOptions" />.
            </summary>
            <seealso cref="T:OpenAI.BaseOptions" />
        </member>
        <member name="T:OpenAI.FineTuneListOptions">
            <summary>
            Fine tune list options class.
            Implements the <see cref="T:OpenAI.ListOptions" />.
            </summary>
            <seealso cref="T:OpenAI.ListOptions" />
        </member>
        <member name="T:OpenAI.FineTuneService">
            <summary>
            Manage fine-tuning jobs to tailor a model to your specific training data.
            Related guide: <see href="https://beta.openai.com/docs/guides/fine-tuning">Fine-tune models</see>.
            Implements the <see cref="!:OpenAI.Service&lt;OpenAI.FineTune&gt;" />.
            Implements the <see cref="!:OpenAI.IListable&lt;OpenAI.FineTune, OpenAI.FineTuneListOptions&gt;" />.
            Implements the <see cref="!:OpenAI.IRetrievable&lt;OpenAI.FineTune, OpenAI.FineTuneGetOptions&gt;" />.
            Implements the <see cref="!:OpenAI.ICreatable&lt;OpenAI.FineTune, OpenAI.FineTuneCreateOptions&gt;" />.
            </summary>
            <seealso cref="!:OpenAI.Service&lt;OpenAI.FineTune&gt;" />
            <seealso cref="!:OpenAI.IListable&lt;OpenAI.FineTune, OpenAI.FineTuneListOptions&gt;" />
            <seealso cref="!:OpenAI.IRetrievable&lt;OpenAI.FineTune, OpenAI.FineTuneGetOptions&gt;" />
            <seealso cref="!:OpenAI.ICreatable&lt;OpenAI.FineTune, OpenAI.FineTuneCreateOptions&gt;" />
        </member>
        <member name="M:OpenAI.FineTuneService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.FineTuneService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.FineTuneService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.FineTuneService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.FineTuneService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.FineTuneService.Get(System.String)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>FineTune.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.Get(System.String,OpenAI.FineTuneGetOptions)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneGetOptions">The fine tune get options.</param>
            <returns>FineTune.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.Get(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>FineTune.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.Get(System.String,OpenAI.FineTuneGetOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneGetOptions">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>FineTune.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.GetAsync(System.String)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.GetAsync(System.String,OpenAI.FineTuneGetOptions)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneGetOptions">The fine tune get options.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.GetAsync(System.String,OpenAI.FineTuneGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneGetOptions">The fine tune get options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.GetAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.GetAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified engine by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.GetAsync(System.String,OpenAI.FineTuneGetOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneGetOptions">The fine-tune get options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.GetAsync(System.String,OpenAI.FineTuneGetOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneGetOptions">The fine-tune get options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.List">
            <summary>
            Gets a list of the specified fine-tunes.
            </summary>
            <returns>OpenAIList&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.List(OpenAI.FineTuneListOptions)">
            <summary>
            Gets a list of the specified fine-tunes.
            </summary>
            <param name="fineTuneListOptions">The options.</param>
            <returns>OpenAIList&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.List(OpenAI.RequestOptions)">
            <summary>
            Gets a list of the specified fine-tunes.
            </summary>
            <param name="requestOptions">The request options.</param>
            <returns>OpenAIList&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.List(OpenAI.FineTuneListOptions,OpenAI.RequestOptions)">
            <summary>
            Gets a list of the specified fine-tunes.
            </summary>
            <param name="fineTuneListOptions">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>OpenAIList&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.ListAsync">
            <summary>
            Gets a list of the specified fine-tunes asynchronously.
            </summary>
            <returns>Task&lt;OpenAIList&lt;FineTune&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of the specified fine-tunes asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;FineTune&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.ListAsync(OpenAI.FineTuneListOptions)">
            <summary>
            Gets a list of the specified fine-tunes asynchronously.
            </summary>
            <param name="fineTuneListOptions">The fine-tine list options.</param>
            <returns>Task&lt;OpenAIList&lt;FineTune&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.ListAsync(OpenAI.FineTuneListOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a list of the specified fine-tunes asynchronously.
            </summary>
            <param name="fineTuneListOptions">The fine-tine list options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;FineTune&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.ListAsync(OpenAI.RequestOptions)">
            <summary>
            Gets a list of the specified fine-tunes asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;OpenAIList&lt;FineTune&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.ListAsync(OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a list of the specified fine-tunes asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;FineTune&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.ListAsync(OpenAI.FineTuneListOptions,OpenAI.RequestOptions)">
            <summary>
            Gets a list of the specified fine-tunes asynchronously.
            </summary>
            <param name="fineTuneListOptions">The fine-tine list options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;OpenAIList&lt;FineTune&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.ListAsync(OpenAI.FineTuneListOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a list of the specified fine-tunes asynchronously.
            </summary>
            <param name="fineTuneListOptions">The fine-tine list options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;FineTune&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.Create(OpenAI.FineTuneCreateOptions)">
            <summary>
            Creates a fine-tune entity with the specified options.
            </summary>
            <param name="fineTuneCreateOptions">The options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.Create(OpenAI.FineTuneCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a fine-tune entity with the specified options.
            </summary>
            <param name="fineTuneCreateOptions">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CreateAsync(OpenAI.FineTuneCreateOptions)">
            <summary>
            Creates a fine-tune entity with the specified options asynchronously.
            </summary>
            <param name="fineTuneCreateOptions">The options.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CreateAsync(OpenAI.FineTuneCreateOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a fine-tune entity with the specified options asynchronously.
            </summary>
            <param name="fineTuneCreateOptions">The options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CreateAsync(OpenAI.FineTuneCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates a fine-tune entity with the specified options asynchronously.
            </summary>
            <param name="fineTuneCreateOptions">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CreateAsync(OpenAI.FineTuneCreateOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a fine-tune entity with the specified options asynchronously.
            </summary>
            <param name="fineTuneCreateOptions">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.Cancel(System.String)">
            <summary>
            Cancels the specified fine-tune  event by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>FineTune.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.Cancel(System.String,OpenAI.FineTuneCancelPutOptions)">
            <summary>
            Cancels the specified fine-tune  event by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneCancelPutOptions">The fine-tune cancel options.</param>
            <returns>FineTune.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.Cancel(System.String,OpenAI.RequestOptions)">
            <summary>
            Cancels the specified fine-tune  event by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>FineTune.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.Cancel(System.String,OpenAI.FineTuneCancelPutOptions,OpenAI.RequestOptions)">
            <summary>
            Cancels the specified fine-tune  event by identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneCancelPutOptions">The fine-tune cancel options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>FineTune.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CancelAsync(System.String)">
            <summary>
            Cancels the specified fine-tune  event by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CancelAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels the specified fine-tune  event by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CancelAsync(System.String,OpenAI.FineTuneCancelPutOptions)">
            <summary>
            Cancels the specified fine-tune  event by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneCancelPutOptions">The fine tune cancel options.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CancelAsync(System.String,OpenAI.FineTuneCancelPutOptions,System.Threading.CancellationToken)">
            <summary>
            Cancels the specified fine-tune  event by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneCancelPutOptions">The fine tune cancel options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CancelAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Cancels the specified fine-tune  event by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CancelAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Cancels the specified fine-tune  event by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CancelAsync(System.String,OpenAI.FineTuneCancelPutOptions,OpenAI.RequestOptions)">
            <summary>
            Cancels the specified fine-tune  event by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneCancelPutOptions">The fine tune cancel options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="M:OpenAI.FineTuneService.CancelAsync(System.String,OpenAI.FineTuneCancelPutOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Cancels the specified fine-tune  event by identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="fineTuneCancelPutOptions">The fine tune cancel options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;FineTune&gt;.</returns>
        </member>
        <member name="T:OpenAI.EditImageCreateOptions">
            <summary>
            Creates an edited or extended image given an original image and a prompt.
            </summary>
        </member>
        <member name="P:OpenAI.EditImageCreateOptions.Image">
            <summary>
            The image to edit. Must be a valid PNG file, less than 4MB, and square.
            If mask is not provided, image must have transparency, which will be used as the mask.
            </summary>
        </member>
        <member name="P:OpenAI.EditImageCreateOptions.ImageSource">
            <summary>
            The image source path.
            </summary>
        </member>
        <member name="P:OpenAI.EditImageCreateOptions.Mask">
            <summary>
            An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where image should be edited.
            Must be a valid PNG file, less than 4MB, and have the same dimensions as image.
            </summary>
        </member>
        <member name="P:OpenAI.EditImageCreateOptions.MaskSource">
            <summary>
            The image mask source path.
            </summary>
        </member>
        <member name="P:OpenAI.EditImageCreateOptions.Prompt">
            <summary>
            A text description of the desired image(s). The maximum length is 1000 characters.
            </summary>
        </member>
        <member name="P:OpenAI.EditImageCreateOptions.N">
            <summary>
            The number of images to generate. Must be between 1 and 10.
            Defaults to 1.
            </summary>
        </member>
        <member name="P:OpenAI.EditImageCreateOptions.Size">
            <summary>
            The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.
            Defaults to 1024x1024.
            </summary>
        </member>
        <member name="P:OpenAI.EditImageCreateOptions.ResponseFormat">
            <summary>
            The format in which the generated images are returned.
            Must be one of url or b64_json. Defaults to url.
            </summary>
        </member>
        <member name="P:OpenAI.EditImageCreateOptions.User">
            <summary>
            A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
            <see href="https://beta.openai.com/docs/guides/safety-best-practices/end-user-ids">Learn more</see>.
            </summary>
        </member>
        <member name="T:OpenAI.ImageCreateOptions">
            <summary>
            Creates an image given a prompt.
            </summary>
        </member>
        <member name="P:OpenAI.ImageCreateOptions.Prompt">
            <summary>
            A text description of the desired image(s). The maximum length is 1000 characters.
            </summary>
        </member>
        <member name="P:OpenAI.ImageCreateOptions.N">
            <summary>
            The number of images to generate. Must be between 1 and 10.
            Defaults to 1.
            </summary>
        </member>
        <member name="P:OpenAI.ImageCreateOptions.Size">
            <summary>
            The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.
            Defaults to 1024x1024.
            </summary>
        </member>
        <member name="P:OpenAI.ImageCreateOptions.ResponseFormat">
            <summary>
            The format in which the generated images are returned.
            Must be one of url or b64_json. Defaults to url.
            </summary>
        </member>
        <member name="P:OpenAI.ImageCreateOptions.User">
            <summary>
            A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
            <see href="https://beta.openai.com/docs/guides/safety-best-practices/end-user-ids">Learn more</see>.
            </summary>
        </member>
        <member name="T:OpenAI.ImageService">
            <summary>
            ImageService class.
            Implements the <see cref="!:OpenAI.Service&lt;OpenAI.Image&gt;" />.
            </summary>
            <seealso cref="!:OpenAI.Service&lt;OpenAI.Image&gt;" />
        </member>
        <member name="M:OpenAI.ImageService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.ImageService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.ImageService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.ImageService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.ImageService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.ImageService.Create(OpenAI.ImageCreateOptions)">
            <summary>
            Creates the specified image with the specified options.
            </summary>
            <param name="imageCreateOptions">The image create options.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:OpenAI.ImageService.Create(OpenAI.ImageCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates the specified image with the specified options.
            </summary>
            <param name="imageCreateOptions">The image create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:OpenAI.ImageService.CreateAsync(OpenAI.ImageCreateOptions)">
            <summary>
            Creates the specified image with the specified options asynchronously.
            </summary>
            <param name="imageCreateOptions">The image create options.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.CreateAsync(OpenAI.ImageCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Creates the specified image with the specified options asynchronously.
            </summary>
            <param name="imageCreateOptions">The image create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.CreateAsync(OpenAI.ImageCreateOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates the specified image with the specified options asynchronously.
            </summary>
            <param name="imageCreateOptions">The image create options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.Edit(OpenAI.EditImageCreateOptions)">
            <summary>
            Edits the image with the specified options.
            </summary>
            <param name="editImageCreateOptions">The edit image create options.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:OpenAI.ImageService.Edit(OpenAI.EditImageCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Edits the image with the specified options.
            </summary>
            <param name="editImageCreateOptions">The edit image create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:OpenAI.ImageService.EditAsync(OpenAI.EditImageCreateOptions)">
            <summary>
            Edits the image with the specified options asynchronously.
            </summary>
            <param name="editImageCreateOptions">The edit image create options.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.EditAsync(OpenAI.EditImageCreateOptions,System.Threading.CancellationToken)">
            <summary>
            Edits the image with the specified options asynchronously.
            </summary>
            <param name="editImageCreateOptions">The edit image create options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.EditAsync(OpenAI.EditImageCreateOptions,OpenAI.RequestOptions)">
            <summary>
            Edits the image with the specified options asynchronously.
            </summary>
            <param name="editImageCreateOptions">The edit image create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.EditAsync(OpenAI.EditImageCreateOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Edits the image with the specified options asynchronously.
            </summary>
            <param name="editImageCreateOptions">The edit image create options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.CreateVariation(OpenAI.ImageVariationCreateOption)">
            <summary>
            Creates a image variation.
            </summary>
            <param name="imageVariationCreateOption">The image variation create options.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:OpenAI.ImageService.CreateVariation(OpenAI.ImageVariationCreateOption,OpenAI.RequestOptions)">
            <summary>
            Creates image variations.
            </summary>
            <param name="imageVariationCreateOption">The image variation create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:OpenAI.ImageService.CreateVariationAsync(OpenAI.ImageVariationCreateOption)">
            <summary>
             Creates image variations asynchronously.
            </summary>
            <param name="imageVariationCreateOption">The image variation create options.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.CreateVariationAsync(OpenAI.ImageVariationCreateOption,System.Threading.CancellationToken)">
            <summary>
             Creates image variations asynchronously.
            </summary>
            <param name="imageVariationCreateOption">The image variation create options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.CreateVariationAsync(OpenAI.ImageVariationCreateOption,OpenAI.RequestOptions)">
            <summary>
             Creates image variations asynchronously.
            </summary>
            <param name="imageVariationCreateOption">The image variation create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="M:OpenAI.ImageService.CreateVariationAsync(OpenAI.ImageVariationCreateOption,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
             Creates image variations asynchronously.
            </summary>
            <param name="imageVariationCreateOption">The image variation create options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Image&gt;.</returns>
        </member>
        <member name="T:OpenAI.ImageVariationCreateOption">
            <summary>
            Creates a variation of a given image.
            </summary>
        </member>
        <member name="P:OpenAI.ImageVariationCreateOption.Image">
            <summary>
            The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.
            If mask is not provided, image must have transparency, which will be used as the mask.
            </summary>
        </member>
        <member name="P:OpenAI.ImageVariationCreateOption.ImageSource">
            <summary>
            The image source path.
            </summary>
        </member>
        <member name="P:OpenAI.ImageVariationCreateOption.N">
            <summary>
            The number of images to generate. Must be between 1 and 10.
            Defaults to 1.
            </summary>
        </member>
        <member name="P:OpenAI.ImageVariationCreateOption.Size">
            <summary>
            The size of the generated images. Must be one of 256x256, 512x512, or 1024x1024.
            Defaults to 1024x1024.
            </summary>
        </member>
        <member name="P:OpenAI.ImageVariationCreateOption.ResponseFormat">
            <summary>
            The format in which the generated images are returned.
            Must be one of url or b64_json. Defaults to url.
            </summary>
        </member>
        <member name="P:OpenAI.ImageVariationCreateOption.User">
            <summary>
            A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse.
            <see href="https://beta.openai.com/docs/guides/safety-best-practices/end-user-ids">Learn more</see>.
            </summary>
        </member>
        <member name="T:OpenAI.IAnyOf">
            <summary>
            Represents a value that may be of one of several different types.
            </summary>
        </member>
        <member name="P:OpenAI.IAnyOf.Value">
            <summary>Gets the value of the current <see cref="T:OpenAI.IAnyOf"/> object.</summary>
            <returns>The value of the current <see cref="T:OpenAI.IAnyOf"/> object.</returns>
        </member>
        <member name="P:OpenAI.IAnyOf.Type">
            <summary>Gets the type of the current <see cref="T:OpenAI.IAnyOf"/> object.</summary>
            <returns>The type of the current <see cref="T:OpenAI.IAnyOf"/> object.</returns>
        </member>
        <member name="T:OpenAI.ICreatable`2">
            <summary>
            The creatable interface.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TOptions">The type of the options.</typeparam>
        </member>
        <member name="M:OpenAI.ICreatable`2.Create(`1)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="createOptions">The create options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.ICreatable`2.Create(`1,OpenAI.RequestOptions)">
            <summary>
            Creates a entity with the specified options.
            </summary>
            <param name="createOptions">The create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The created entity.</returns>
        </member>
        <member name="M:OpenAI.ICreatable`2.CreateAsync(`1)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="createOptions">The create options.</param>
            <returns>The created entity task.</returns>
        </member>
        <member name="M:OpenAI.ICreatable`2.CreateAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="createOptions">The create options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The created entity task.</returns>
        </member>
        <member name="M:OpenAI.ICreatable`2.CreateAsync(`1,OpenAI.RequestOptions)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="createOptions">The create options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The created entity task.</returns>
        </member>
        <member name="M:OpenAI.ICreatable`2.CreateAsync(`1,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a entity with the specified options asynchronously.
            </summary>
            <param name="createOptions">The create options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The created entity task.</returns>
        </member>
        <member name="T:OpenAI.IDeletable`2">
            <summary>
            The deletable interface.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TOptions">The type of the options.</typeparam>
        </member>
        <member name="M:OpenAI.IDeletable`2.Delete(System.String,`1,OpenAI.RequestOptions)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The deleted entity.</returns>
        </member>
        <member name="M:OpenAI.IDeletable`2.DeleteAsync(System.String)">
            <summary>
            Deletes the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The deleted entity task.</returns>
        </member>
        <member name="M:OpenAI.IDeletable`2.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The deleted entity task.</returns>
        </member>
        <member name="M:OpenAI.IDeletable`2.DeleteAsync(System.String,`1)">
            <summary>
            Deletes the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <returns>The deleted entity task.</returns>
        </member>
        <member name="M:OpenAI.IDeletable`2.DeleteAsync(System.String,`1,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The deleted entity task.</returns>
        </member>
        <member name="M:OpenAI.IDeletable`2.DeleteAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Deletes the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The deleted entity task.</returns>
        </member>
        <member name="M:OpenAI.IDeletable`2.DeleteAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The deleted entity task.</returns>
        </member>
        <member name="M:OpenAI.IDeletable`2.DeleteAsync(System.String,`1,OpenAI.RequestOptions)">
            <summary>
            Deletes the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The deleted entity task.</returns>
        </member>
        <member name="M:OpenAI.IDeletable`2.DeleteAsync(System.String,`1,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The deleted entity task.</returns>
        </member>
        <member name="T:OpenAI.IListable`2">
            <summary>
            The listable interface.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TOptions">The type of the options.</typeparam>
        </member>
        <member name="M:OpenAI.IListable`2.List">
            <summary>
            Lists the specified entities based on the provided list options.
            </summary>
            <returns>A list of the specified entities.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.List(`1)">
            <summary>
            Lists the specified entities based on the provided list options.
            </summary>
            <param name="listOptions">The list options.</param>
            <returns>A list of the specified entities.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.List(OpenAI.RequestOptions)">
            <summary>
            Lists the specified entities based on the provided list options.
            </summary>
            <param name="requestOptions">The request options.</param>
            <returns>A list of the specified entities.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.List(`1,OpenAI.RequestOptions)">
            <summary>
            Lists the specified entities based on the provided list options.
            </summary>
            <param name="listOptions">The list options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>A list of the specified entities.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.ListAsync">
            <summary>
            Lists the specified entities based on the provided list options asynchronously.
            </summary>
            <returns>A list of the specified entities task.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the specified entities based on the provided list options asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A list of the specified entities task.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.ListAsync(`1)">
            <summary>
            Lists the specified entities based on the provided list options asynchronously.
            </summary>
            <param name="listOptions">The list options.</param>
            <returns>A list of the specified entities task.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.ListAsync(`1,System.Threading.CancellationToken)">
            <summary>
            Lists the specified entities based on the provided list options asynchronously.
            </summary>
            <param name="listOptions">The list options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A list of the specified entities task.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.ListAsync(OpenAI.RequestOptions)">
            <summary>
            Lists the specified entities based on the provided list options asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <returns>A list of the specified entities task.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.ListAsync(OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the specified entities based on the provided list options asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A list of the specified entities task.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.ListAsync(`1,OpenAI.RequestOptions)">
            <summary>
            Lists the specified entities based on the provided list options asynchronously.
            </summary>
            <param name="listOptions">The list options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>A list of the specified entities task.</returns>
        </member>
        <member name="M:OpenAI.IListable`2.ListAsync(`1,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the specified entities based on the provided list options asynchronously.
            </summary>
            <param name="listOptions">The list options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A list of the specified entities task.</returns>
        </member>
        <member name="T:OpenAI.INestedOptions">
            <summary>
            Interface for nested options.
            </summary>
        </member>
        <member name="T:OpenAI.IRetrievable`2">
            <summary>
            The retrievable interface.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <typeparam name="TOptions">The type of the options.</typeparam>
        </member>
        <member name="M:OpenAI.IRetrievable`2.Get(System.String)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The specified entity.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.Get(System.String,`1)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="retrieveOptions">The retrieve options.</param>
            <returns>The specified entity.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.Get(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The specified entity.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.Get(System.String,`1,OpenAI.RequestOptions)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="retrieveOptions">The retrieve options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The specified entity.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.GetAsync(System.String)">
            <summary>
            Gets the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The specified entity task.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.GetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The specified entity task.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.GetAsync(System.String,`1)">
            <summary>
            Gets the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="retrieveOptions">The retrieve options.</param>
            <returns>The specified entity task.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.GetAsync(System.String,`1,System.Threading.CancellationToken)">
            <summary>
            Gets the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="retrieveOptions">The retrieve options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The specified entity task.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.GetAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The specified entity task.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.GetAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The specified entity task.</returns>
        </member>
        <member name="M:OpenAI.IRetrievable`2.GetAsync(System.String,`1,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="retrieveOptions">The retrieve options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>The specified entity task.</returns>
        </member>
        <member name="T:OpenAI.ISingletonRetrievable`1">
            <summary>
            Interface for singleton retrievable.
            </summary>
            <typeparam name="TEntity">
            Type of the entity.
            </typeparam>
        </member>
        <member name="M:OpenAI.ISingletonRetrievable`1.Get">
            <summary>
            Gets a T entity using the given request options.
            </summary>
            (Optional) The request options to get.
            <returns>A TEntity.</returns>
        </member>
        <member name="M:OpenAI.ISingletonRetrievable`1.Get(OpenAI.RequestOptions)">
            <summary>
            Gets a T entity using the given request options.
            </summary>
            <param name="requestOptions">
            (Optional) The request options to get.</param>
            <returns>A TEntity.</returns>
        </member>
        <member name="M:OpenAI.ISingletonRetrievable`1.GetAsync">
            <summary>
            Gets a T entity using the given request options asynchronously.
            </summary>
            <returns>Task&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:OpenAI.ISingletonRetrievable`1.GetAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a T entity using the given request options asynchronously.
            </summary>
            <param name="cancellationToken">
            (Optional) A token that allows processing to be cancelled.
            </param>
            <returns>Task&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:OpenAI.ISingletonRetrievable`1.GetAsync(OpenAI.RequestOptions)">
            <summary>
            Gets a T entity using the given request options asynchronously.
            </summary>
            <param name="requestOptions">
            (Optional) Options for controlling the request.
            </param>
            <returns>Task&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:OpenAI.ISingletonRetrievable`1.GetAsync(OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets a T entity using the given request options asynchronously.
            </summary>
            <param name="requestOptions">
            (Optional) Options for controlling the request.
            </param>
            <param name="cancellationToken">
            (Optional) A token that allows processing to be cancelled.
            </param>
            <returns>Task&lt;TEntity&gt;.</returns>
        </member>
        <member name="T:OpenAI.IUpdatable`2">
            <summary>
            The IUpdatable Interface.
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <typeparam name="TOptions">The type of the t options.</typeparam>
        </member>
        <member name="M:OpenAI.IUpdatable`2.Update(System.String,`1)">
            <summary>
            Updates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="updateOptions">The update options.</param>
            <returns>TEntity.</returns>
        </member>
        <member name="M:OpenAI.IUpdatable`2.Update(System.String,`1,OpenAI.RequestOptions)">
            <summary>
            Updates the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="updateOptions">The update options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>TEntity.</returns>
        </member>
        <member name="M:OpenAI.IUpdatable`2.UpdateAsync(System.String,`1)">
            <summary>
            Updates the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="updateOptions">The update options.</param>
            <returns>Task&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:OpenAI.IUpdatable`2.UpdateAsync(System.String,`1,System.Threading.CancellationToken)">
            <summary>
            Updates the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="updateOptions">The update options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:OpenAI.IUpdatable`2.UpdateAsync(System.String,`1,OpenAI.RequestOptions)">
            <summary>
            Updates the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="updateOptions">The update options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;TEntity&gt;.</returns>
        </member>
        <member name="M:OpenAI.IUpdatable`2.UpdateAsync(System.String,`1,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Updates the specified identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="updateOptions">The update options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;TEntity&gt;.</returns>
        </member>
        <member name="T:OpenAI.ModelDeleteOptions">
            <summary>
            Model delete options class.
            Implements the <see cref="T:OpenAI.BaseOptions" />.
            </summary>
            <seealso cref="T:OpenAI.BaseOptions" />
        </member>
        <member name="T:OpenAI.ModelGetOptions">
            <summary>
            Model get options class.
            Implements the <see cref="T:OpenAI.BaseOptions" />.
            </summary>
            <seealso cref="T:OpenAI.BaseOptions" />
        </member>
        <member name="T:OpenAI.ModelListOptions">
            <summary>
            Model list options class.
            Implements the <see cref="T:OpenAI.ListOptions" />.
            </summary>
            <seealso cref="T:OpenAI.ListOptions" />
        </member>
        <member name="T:OpenAI.ModelService">
            <summary>
            ModelService class.
            Implements the <see cref="!:OpenAI.Service&lt;OpenAI.Model&gt;" />.
            Implements the <see cref="!:OpenAI.IListable&lt;OpenAI.Model, OpenAI.ModelListOptions&gt;" />.
            Implements the <see cref="!:OpenAI.IRetrievable&lt;OpenAI.Model, OpenAI.ModelGetOptions&gt;" />.
            Implements the <see cref="!:OpenAI.IDeletable&lt;OpenAI.Model, OpenAI.ModelDeleteOptions&gt;" />.
            </summary>
            <seealso cref="!:OpenAI.Service&lt;OpenAI.Model&gt;" />
            <seealso cref="!:OpenAI.IListable&lt;OpenAI.Model, OpenAI.ModelListOptions&gt;" />
            <seealso cref="!:OpenAI.IRetrievable&lt;OpenAI.Model, OpenAI.ModelGetOptions&gt;" />
            <seealso cref="!:OpenAI.IDeletable&lt;OpenAI.Model, OpenAI.ModelDeleteOptions&gt;" />
        </member>
        <member name="M:OpenAI.ModelService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.ModelService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.ModelService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.ModelService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.ModelService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.ModelService.Get(System.String)">
            <summary>
            Gets the specified model based on the identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Model.</returns>
        </member>
        <member name="M:OpenAI.ModelService.Get(System.String,OpenAI.ModelGetOptions)">
            <summary>
            Gets the specified model based on the identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="modelGetOptions">The model get options.</param>
            <returns>Model.</returns>
        </member>
        <member name="M:OpenAI.ModelService.Get(System.String,OpenAI.RequestOptions)">
            <summary>
            Gets the specified model based on the identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Model.</returns>
        </member>
        <member name="M:OpenAI.ModelService.Get(System.String,OpenAI.ModelGetOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the specified model based on the identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="modelGetOptions">The model get options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Model.</returns>
        </member>
        <member name="M:OpenAI.ModelService.GetAsync(System.String,OpenAI.ModelGetOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified model based on the identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="modelGetOptions">The model get options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.Delete(System.String)">
            <summary>
            Deletes the specified model based on the identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The deleted entity.</returns>
        </member>
        <member name="M:OpenAI.ModelService.Delete(System.String,OpenAI.ModelDeleteOptions)">
            <summary>
            Deletes the specified model based on the identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="modelDeleteOptions">The model delete options.</param>
            <returns>The deleted entity.</returns>
        </member>
        <member name="M:OpenAI.ModelService.Delete(System.String,OpenAI.RequestOptions)">
            <summary>
            Deletes the specified model based on the identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The deleted entity.</returns>
        </member>
        <member name="M:OpenAI.ModelService.Delete(System.String,OpenAI.ModelDeleteOptions,OpenAI.RequestOptions)">
            <summary>
            Deletes the specified model based on the identifier.
            </summary>
            <param name="id">The identifier.</param>
            <param name="modelDeleteOptions">The model delete options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>The deleted entity.</returns>
        </member>
        <member name="M:OpenAI.ModelService.DeleteAsync(System.String)">
            <summary>
            Deletes the specified model based on the identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <returns>Task&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified model based on the identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.DeleteAsync(System.String,OpenAI.ModelDeleteOptions)">
            <summary>
            Deletes the specified model based on the identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="modelDeleteOptions">The model delete options.</param>
            <returns>Task&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.DeleteAsync(System.String,OpenAI.ModelDeleteOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified model based on the identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="modelDeleteOptions">The model delete options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.DeleteAsync(System.String,OpenAI.RequestOptions)">
            <summary>
            Deletes the specified model based on the identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.DeleteAsync(System.String,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified model based on the identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.DeleteAsync(System.String,OpenAI.ModelDeleteOptions,OpenAI.RequestOptions)">
            <summary>
            Deletes the specified model based on the identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="modelDeleteOptions">The model delete options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.DeleteAsync(System.String,OpenAI.ModelDeleteOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified model based on the identifier asynchronously.
            </summary>
            <param name="id">The identifier.</param>
            <param name="modelDeleteOptions">The model delete options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>Task&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.List(OpenAI.ModelListOptions,OpenAI.RequestOptions)">
            <summary>
            Lists the specified models based on the passed options.
            </summary>
            <param name="modelListOptions">The model list options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>OpenAIList&lt;Model&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.ListAsync">
            <summary>
            Lists the specified models based on the passed options asynchronously.
            </summary>
            <returns>Task&lt;OpenAIList&lt;Model&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the specified models based on the passed options asynchronously.
            </summary>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;Model&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.ListAsync(OpenAI.ModelListOptions)">
            <summary>
            Lists the specified models based on the passed options asynchronously.
            </summary>
            <param name="modelListOptions">The model list options.</param>
            <returns>Task&lt;OpenAIList&lt;Model&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.ListAsync(OpenAI.ModelListOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the specified models based on the passed options asynchronously.
            </summary>
            <param name="modelListOptions">The model list options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;Model&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.ListAsync(OpenAI.RequestOptions)">
            <summary>
            Lists the specified models based on the passed options asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;OpenAIList&lt;Model&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.ListAsync(OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the specified models based on the passed options asynchronously.
            </summary>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;Model&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.ListAsync(OpenAI.ModelListOptions,OpenAI.RequestOptions)">
            <summary>
            Lists the specified models based on the passed options asynchronously.
            </summary>
            <param name="modelListOptions">The model list options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;OpenAIList&lt;Model&gt;&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModelService.ListAsync(OpenAI.ModelListOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Lists the specified models based on the passed options asynchronously.
            </summary>
            <param name="modelListOptions">The model list options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;OpenAIList&lt;Model&gt;&gt;.</returns>
        </member>
        <member name="T:OpenAI.ModerationGetOptions">
            <summary>
            Moderation get options class.
            Implements the <see cref="T:OpenAI.BaseOptions" />.
            </summary>
            <seealso cref="T:OpenAI.BaseOptions" />
        </member>
        <member name="P:OpenAI.ModerationGetOptions.Input">
            <summary>
            The input text to classify.
            </summary>
        </member>
        <member name="P:OpenAI.ModerationGetOptions.Model">
            <summary>
            Two content moderations models are available: text-moderation-stable and text-moderation-latest.
            The default is text-moderation-latest which will be automatically upgraded over time.
            This ensures you are always using our most accurate model.
            If you use text-moderation-stable, we will provide advanced notice before updating the model.
            Accuracy of text-moderation-stable may be slightly lower than for text-moderation-latest.
            </summary>
        </member>
        <member name="T:OpenAI.ModerationService">
            <summary>
            Given a input text, outputs if the model classifies it as violating OpenAI's content policy.
            Implements the <see cref="!:OpenAI.Service&lt;OpenAI.Moderation&gt;" />.
            </summary>
            <seealso cref="!:OpenAI.Service&lt;OpenAI.Moderation&gt;" />
        </member>
        <member name="M:OpenAI.ModerationService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.ModerationService"/> class.
            </summary>
        </member>
        <member name="M:OpenAI.ModerationService.#ctor(OpenAI.IOpenAIClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenAI.ModerationService"/> class.
            </summary>
            <param name="client">The client used by the service to send requests.</param>
        </member>
        <member name="P:OpenAI.ModerationService.BasePath">
            <summary>
            Gets the base path.
            </summary>
            <value>The base path.</value>
        </member>
        <member name="M:OpenAI.ModerationService.Get(OpenAI.ModerationGetOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the specified moderation results.
            </summary>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Moderation.</returns>
        </member>
        <member name="M:OpenAI.ModerationService.GetAsync(OpenAI.ModerationGetOptions)">
            <summary>
            Gets the specified moderation results asynchronously.
            </summary>
            <param name="options">The options.</param>
            <returns>Task&lt;Moderation&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModerationService.GetAsync(OpenAI.ModerationGetOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified moderation results asynchronously.
            </summary>
            <param name="options">The options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Moderation&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModerationService.GetAsync(OpenAI.ModerationGetOptions,OpenAI.RequestOptions)">
            <summary>
            Gets the specified moderation results asynchronously.
            </summary>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <returns>Task&lt;Moderation&gt;.</returns>
        </member>
        <member name="M:OpenAI.ModerationService.GetAsync(OpenAI.ModerationGetOptions,OpenAI.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Gets the specified moderation results asynchronously.
            </summary>
            <param name="options">The options.</param>
            <param name="requestOptions">The request options.</param>
            <param name="cancellationToken">The cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <returns>Task&lt;Moderation&gt;.</returns>
        </member>
    </members>
</doc>
